

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Aug 02 22:36:29 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29     0000                     
    30                           ; Version 2.40
    31                           ; Generated 17/11/2021 GMT
    32                           ; 
    33                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0007                     	;# 
    73     0008                     	;# 
    74     0009                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     000C                     	;# 
    78     000D                     	;# 
    79     000E                     	;# 
    80     000E                     	;# 
    81     000F                     	;# 
    82     0010                     	;# 
    83     0011                     	;# 
    84     0012                     	;# 
    85     0013                     	;# 
    86     0014                     	;# 
    87     0015                     	;# 
    88     0015                     	;# 
    89     0016                     	;# 
    90     0017                     	;# 
    91     0018                     	;# 
    92     0019                     	;# 
    93     001A                     	;# 
    94     001B                     	;# 
    95     001B                     	;# 
    96     001C                     	;# 
    97     001D                     	;# 
    98     001E                     	;# 
    99     001F                     	;# 
   100     0081                     	;# 
   101     0085                     	;# 
   102     0086                     	;# 
   103     0087                     	;# 
   104     0088                     	;# 
   105     0089                     	;# 
   106     008C                     	;# 
   107     008D                     	;# 
   108     008E                     	;# 
   109     008F                     	;# 
   110     0090                     	;# 
   111     0091                     	;# 
   112     0092                     	;# 
   113     0093                     	;# 
   114     0093                     	;# 
   115     0093                     	;# 
   116     0094                     	;# 
   117     0095                     	;# 
   118     0096                     	;# 
   119     0097                     	;# 
   120     0098                     	;# 
   121     0099                     	;# 
   122     009A                     	;# 
   123     009B                     	;# 
   124     009C                     	;# 
   125     009D                     	;# 
   126     009E                     	;# 
   127     009F                     	;# 
   128     0105                     	;# 
   129     0107                     	;# 
   130     0108                     	;# 
   131     0109                     	;# 
   132     010C                     	;# 
   133     010C                     	;# 
   134     010D                     	;# 
   135     010E                     	;# 
   136     010F                     	;# 
   137     0185                     	;# 
   138     0187                     	;# 
   139     0188                     	;# 
   140     0189                     	;# 
   141     018C                     	;# 
   142     018D                     	;# 
   143     0000                     	;# 
   144     0001                     	;# 
   145     0002                     	;# 
   146     0003                     	;# 
   147     0004                     	;# 
   148     0005                     	;# 
   149     0006                     	;# 
   150     0007                     	;# 
   151     0008                     	;# 
   152     0009                     	;# 
   153     000A                     	;# 
   154     000B                     	;# 
   155     000C                     	;# 
   156     000D                     	;# 
   157     000E                     	;# 
   158     000E                     	;# 
   159     000F                     	;# 
   160     0010                     	;# 
   161     0011                     	;# 
   162     0012                     	;# 
   163     0013                     	;# 
   164     0014                     	;# 
   165     0015                     	;# 
   166     0015                     	;# 
   167     0016                     	;# 
   168     0017                     	;# 
   169     0018                     	;# 
   170     0019                     	;# 
   171     001A                     	;# 
   172     001B                     	;# 
   173     001B                     	;# 
   174     001C                     	;# 
   175     001D                     	;# 
   176     001E                     	;# 
   177     001F                     	;# 
   178     0081                     	;# 
   179     0085                     	;# 
   180     0086                     	;# 
   181     0087                     	;# 
   182     0088                     	;# 
   183     0089                     	;# 
   184     008C                     	;# 
   185     008D                     	;# 
   186     008E                     	;# 
   187     008F                     	;# 
   188     0090                     	;# 
   189     0091                     	;# 
   190     0092                     	;# 
   191     0093                     	;# 
   192     0093                     	;# 
   193     0093                     	;# 
   194     0094                     	;# 
   195     0095                     	;# 
   196     0096                     	;# 
   197     0097                     	;# 
   198     0098                     	;# 
   199     0099                     	;# 
   200     009A                     	;# 
   201     009B                     	;# 
   202     009C                     	;# 
   203     009D                     	;# 
   204     009E                     	;# 
   205     009F                     	;# 
   206     0105                     	;# 
   207     0107                     	;# 
   208     0108                     	;# 
   209     0109                     	;# 
   210     010C                     	;# 
   211     010C                     	;# 
   212     010D                     	;# 
   213     010E                     	;# 
   214     010F                     	;# 
   215     0185                     	;# 
   216     0187                     	;# 
   217     0188                     	;# 
   218     0189                     	;# 
   219     018C                     	;# 
   220     018D                     	;# 
   221     0000                     	;# 
   222     0001                     	;# 
   223     0002                     	;# 
   224     0003                     	;# 
   225     0004                     	;# 
   226     0005                     	;# 
   227     0006                     	;# 
   228     0007                     	;# 
   229     0008                     	;# 
   230     0009                     	;# 
   231     000A                     	;# 
   232     000B                     	;# 
   233     000C                     	;# 
   234     000D                     	;# 
   235     000E                     	;# 
   236     000E                     	;# 
   237     000F                     	;# 
   238     0010                     	;# 
   239     0011                     	;# 
   240     0012                     	;# 
   241     0013                     	;# 
   242     0014                     	;# 
   243     0015                     	;# 
   244     0015                     	;# 
   245     0016                     	;# 
   246     0017                     	;# 
   247     0018                     	;# 
   248     0019                     	;# 
   249     001A                     	;# 
   250     001B                     	;# 
   251     001B                     	;# 
   252     001C                     	;# 
   253     001D                     	;# 
   254     001E                     	;# 
   255     001F                     	;# 
   256     0081                     	;# 
   257     0085                     	;# 
   258     0086                     	;# 
   259     0087                     	;# 
   260     0088                     	;# 
   261     0089                     	;# 
   262     008C                     	;# 
   263     008D                     	;# 
   264     008E                     	;# 
   265     008F                     	;# 
   266     0090                     	;# 
   267     0091                     	;# 
   268     0092                     	;# 
   269     0093                     	;# 
   270     0093                     	;# 
   271     0093                     	;# 
   272     0094                     	;# 
   273     0095                     	;# 
   274     0096                     	;# 
   275     0097                     	;# 
   276     0098                     	;# 
   277     0099                     	;# 
   278     009A                     	;# 
   279     009B                     	;# 
   280     009C                     	;# 
   281     009D                     	;# 
   282     009E                     	;# 
   283     009F                     	;# 
   284     0105                     	;# 
   285     0107                     	;# 
   286     0108                     	;# 
   287     0109                     	;# 
   288     010C                     	;# 
   289     010C                     	;# 
   290     010D                     	;# 
   291     010E                     	;# 
   292     010F                     	;# 
   293     0185                     	;# 
   294     0187                     	;# 
   295     0188                     	;# 
   296     0189                     	;# 
   297     018C                     	;# 
   298     018D                     	;# 
   299     0000                     	;# 
   300     0001                     	;# 
   301     0002                     	;# 
   302     0003                     	;# 
   303     0004                     	;# 
   304     0005                     	;# 
   305     0006                     	;# 
   306     0007                     	;# 
   307     0008                     	;# 
   308     0009                     	;# 
   309     000A                     	;# 
   310     000B                     	;# 
   311     000C                     	;# 
   312     000D                     	;# 
   313     000E                     	;# 
   314     000E                     	;# 
   315     000F                     	;# 
   316     0010                     	;# 
   317     0011                     	;# 
   318     0012                     	;# 
   319     0013                     	;# 
   320     0014                     	;# 
   321     0015                     	;# 
   322     0015                     	;# 
   323     0016                     	;# 
   324     0017                     	;# 
   325     0018                     	;# 
   326     0019                     	;# 
   327     001A                     	;# 
   328     001B                     	;# 
   329     001B                     	;# 
   330     001C                     	;# 
   331     001D                     	;# 
   332     001E                     	;# 
   333     001F                     	;# 
   334     0081                     	;# 
   335     0085                     	;# 
   336     0086                     	;# 
   337     0087                     	;# 
   338     0088                     	;# 
   339     0089                     	;# 
   340     008C                     	;# 
   341     008D                     	;# 
   342     008E                     	;# 
   343     008F                     	;# 
   344     0090                     	;# 
   345     0091                     	;# 
   346     0092                     	;# 
   347     0093                     	;# 
   348     0093                     	;# 
   349     0093                     	;# 
   350     0094                     	;# 
   351     0095                     	;# 
   352     0096                     	;# 
   353     0097                     	;# 
   354     0098                     	;# 
   355     0099                     	;# 
   356     009A                     	;# 
   357     009B                     	;# 
   358     009C                     	;# 
   359     009D                     	;# 
   360     009E                     	;# 
   361     009F                     	;# 
   362     0105                     	;# 
   363     0107                     	;# 
   364     0108                     	;# 
   365     0109                     	;# 
   366     010C                     	;# 
   367     010C                     	;# 
   368     010D                     	;# 
   369     010E                     	;# 
   370     010F                     	;# 
   371     0185                     	;# 
   372     0187                     	;# 
   373     0188                     	;# 
   374     0189                     	;# 
   375     018C                     	;# 
   376     018D                     	;# 
   377                           
   378                           	psect	strings
   379     0003                     __pstrings:
   380     0003                     stringtab:
   381     0003                     __stringtab:
   382                           
   383                           ;	String table - string pointers are 1 byte each
   384     0003  1BFF               	btfsc	btemp+1,7
   385     0004  280D               	ljmp	stringcode
   386     0005  1383               	bcf	3,7
   387     0006  187F               	btfsc	btemp+1,0
   388     0007  1783               	bsf	3,7
   389     0008  0800               	movf	0,w
   390     0009  0A84               	incf	4,f
   391     000A  1903               	skipnz
   392     000B  0AFF               	incf	btemp+1,f
   393     000C  0008               	return
   394     000D                     stringcode:
   395     000D                     stringdir:
   396     000D  3000               	movlw	high stringdir
   397     000E  008A               	movwf	10
   398     000F  0804               	movf	4,w
   399     0010  0A84               	incf	4,f
   400     0011  0782               	addwf	2,f
   401     0012                     __stringbase:
   402     0012  3400               	retlw	0
   403     0013                     __end_of__stringtab:
   404     0013                     _dpowers:
   405     0013  3401               	retlw	1
   406     0014  3400               	retlw	0
   407     0015  340A               	retlw	10
   408     0016  3400               	retlw	0
   409     0017  3464               	retlw	100
   410     0018  3400               	retlw	0
   411     0019  34E8               	retlw	232
   412     001A  3403               	retlw	3
   413     001B  3410               	retlw	16
   414     001C  3427               	retlw	39
   415     001D                     __end_of_dpowers:
   416     0008                     _PORTDbits	set	8
   417     0006                     _PORTBbits	set	6
   418     0013                     _SSPBUF	set	19
   419     0014                     _SSPCON	set	20
   420     0009                     _PORTE	set	9
   421     0008                     _PORTD	set	8
   422     0007                     _PORTCbits	set	7
   423     0006                     _PORTB	set	6
   424     0005                     _PORTA	set	5
   425     0094                     _SSPSTATbits	set	148
   426     0094                     _SSPSTAT	set	148
   427     0088                     _TRISD	set	136
   428     0087                     _TRISCbits	set	135
   429     0086                     _TRISB	set	134
   430     0085                     _TRISA	set	133
   431     008F                     _OSCCON	set	143
   432     043B                     _TRISC3	set	1083
   433     043D                     _TRISC5	set	1085
   434     0189                     _ANSELH	set	393
   435     0188                     _ANSEL	set	392
   436     001D                     STR_1:
   437     001D  3450               	retlw	80	;'P'
   438     001E  344F               	retlw	79	;'O'
   439     001F  3454               	retlw	84	;'T'
   440     0020  3431               	retlw	49	;'1'
   441     0021  3400               	retlw	0
   442     0022                     STR_2:
   443     0022  3450               	retlw	80	;'P'
   444     0023  344F               	retlw	79	;'O'
   445     0024  3454               	retlw	84	;'T'
   446     0025  3432               	retlw	50	;'2'
   447     0026  3400               	retlw	0
   448     0027                     STR_3:
   449     0027  3443               	retlw	67	;'C'
   450     0028  344F               	retlw	79	;'O'
   451     0029  344E               	retlw	78	;'N'
   452     002A  3454               	retlw	84	;'T'
   453     002B  3400               	retlw	0
   454     002C                     STR_4:
   455     002C  3425               	retlw	37	;'%'
   456     002D  3464               	retlw	100	;'d'
   457     002E  3400               	retlw	0
   458     002C                     
   459                           	psect	cinit
   460     07F3                     start_initialization:	
   461                           ; #config settings
   462                           
   463     07F3                     __initialization:
   464                           
   465                           ; Clear objects allocated to BANK0
   466     07F3  1383               	bcf	3,7	;select IRP bank0
   467     07F4  3020               	movlw	low __pbssBANK0
   468     07F5  0084               	movwf	4
   469     07F6  3032               	movlw	low (__pbssBANK0+18)
   470     07F7  120A  118A  2357  120A  118A  	fcall	clear_ram0
   471     07FC                     end_of_initialization:	
   472                           ;End of C runtime variable initialization code
   473                           
   474     07FC                     __end_of__initialization:
   475     07FC  0183               	clrf	3
   476     07FD  120A  118A  2E12   	ljmp	_main	;jump to C main() function
   477                           
   478                           	psect	bssBANK0
   479     0020                     __pbssBANK0:
   480     0020                     _CONT:
   481     0020                     	ds	2
   482     0022                     _POT2:
   483     0022                     	ds	2
   484     0024                     _POT1:
   485     0024                     	ds	2
   486     0026                     _cCONT:
   487     0026                     	ds	4
   488     002A                     _cPOT2:
   489     002A                     	ds	4
   490     002E                     _cPOT1:
   491     002E                     	ds	4
   492                           
   493                           	psect	clrtext
   494     0357                     clear_ram0:	
   495                           ;	Called with FSR containing the base address, and
   496                           ;	W with the last address+1
   497                           
   498     0357  0064               	clrwdt	;clear the watchdog before getting into this loop
   499     0358                     clrloop0:
   500     0358  0180               	clrf	0	;clear RAM location pointed to by FSR
   501     0359  0A84               	incf	4,f	;increment pointer
   502     035A  0604               	xorwf	4,w	;XOR with final address
   503     035B  1903               	btfsc	3,2	;have we reached the end yet?
   504     035C  3400               	retlw	0	;all done for this memory range, return
   505     035D  0604               	xorwf	4,w	;XOR again to restore value
   506     035E  2B58               	goto	clrloop0	;do the next byte
   507                           
   508                           	psect	cstackCOMMON
   509     0070                     __pcstackCOMMON:
   510     0070                     ?_spiInit:
   511     0070                     ?_Lcd_Init:	
   512                           ; 1 bytes @ 0x0
   513                           
   514     0070                     ?_Lcd_Clear:	
   515                           ; 1 bytes @ 0x0
   516                           
   517     0070                     ?_spiWrite:	
   518                           ; 1 bytes @ 0x0
   519                           
   520     0070                     ??_spiWrite:	
   521                           ; 1 bytes @ 0x0
   522                           
   523     0070                     ?_spiRead:	
   524                           ; 1 bytes @ 0x0
   525                           
   526     0070                     ??_spiRead:	
   527                           ; 1 bytes @ 0x0
   528                           
   529     0070                     ?_setup:	
   530                           ; 1 bytes @ 0x0
   531                           
   532     0070                     ?_main:	
   533                           ; 1 bytes @ 0x0
   534                           
   535     0070                     ?_spiReceiveWait:	
   536                           ; 1 bytes @ 0x0
   537                           
   538     0070                     ??_spiReceiveWait:	
   539                           ; 1 bytes @ 0x0
   540                           
   541     0070                     ?_Lcd_Port:	
   542                           ; 1 bytes @ 0x0
   543                           
   544     0070                     ??_Lcd_Port:	
   545                           ; 1 bytes @ 0x0
   546                           
   547     0070                     ?_Lcd_Cmd:	
   548                           ; 1 bytes @ 0x0
   549                           
   550     0070                     ?_Lcd_Write_Char:	
   551                           ; 1 bytes @ 0x0
   552                           
   553     0070                     ?___lwdiv:	
   554                           ; 1 bytes @ 0x0
   555                           
   556     0070                     spiInit@sDataSample:	
   557                           ; 2 bytes @ 0x0
   558                           
   559     0070                     spiWrite@dat:	
   560                           ; 1 bytes @ 0x0
   561                           
   562     0070                     Lcd_Port@a:	
   563                           ; 1 bytes @ 0x0
   564                           
   565     0070                     ___lwdiv@divisor:	
   566                           ; 1 bytes @ 0x0
   567                           
   568                           
   569                           ; 2 bytes @ 0x0
   570     0070                     	ds	1
   571     0071                     ??_Lcd_Cmd:
   572     0071                     ??_Lcd_Write_Char:	
   573                           ; 1 bytes @ 0x1
   574                           
   575     0071                     spiInit@sClockIdle:	
   576                           ; 1 bytes @ 0x1
   577                           
   578                           
   579                           ; 1 bytes @ 0x1
   580     0071                     	ds	1
   581     0072                     spiInit@sTransmitEdge:
   582     0072                     Lcd_Write_Char@a:	
   583                           ; 1 bytes @ 0x2
   584                           
   585     0072                     ___lwdiv@dividend:	
   586                           ; 1 bytes @ 0x2
   587                           
   588                           
   589                           ; 2 bytes @ 0x2
   590     0072                     	ds	1
   591     0073                     ??_spiInit:
   592     0073                     ?_Lcd_Write_String:	
   593                           ; 1 bytes @ 0x3
   594                           
   595     0073                     spiInit@sType:	
   596                           ; 1 bytes @ 0x3
   597                           
   598     0073                     Lcd_Cmd@a:	
   599                           ; 1 bytes @ 0x3
   600                           
   601     0073                     Lcd_Write_String@a:	
   602                           ; 1 bytes @ 0x3
   603                           
   604                           
   605                           ; 2 bytes @ 0x3
   606     0073                     	ds	1
   607     0074                     ??_Lcd_Init:
   608     0074                     ??_Lcd_Clear:	
   609                           ; 1 bytes @ 0x4
   610                           
   611     0074                     ?_Lcd_Set_Cursor:	
   612                           ; 1 bytes @ 0x4
   613                           
   614     0074                     ??_setup:	
   615                           ; 1 bytes @ 0x4
   616                           
   617     0074                     ??___lwdiv:	
   618                           ; 1 bytes @ 0x4
   619                           
   620     0074                     Lcd_Set_Cursor@b:	
   621                           ; 1 bytes @ 0x4
   622                           
   623                           
   624                           ; 1 bytes @ 0x4
   625     0074                     	ds	1
   626     0075                     ??_Lcd_Set_Cursor:
   627     0075                     ??_Lcd_Write_String:	
   628                           ; 1 bytes @ 0x5
   629                           
   630     0075                     Lcd_Set_Cursor@a:	
   631                           ; 1 bytes @ 0x5
   632                           
   633     0075                     ___lwdiv@quotient:	
   634                           ; 1 bytes @ 0x5
   635                           
   636                           
   637                           ; 2 bytes @ 0x5
   638     0075                     	ds	1
   639     0076                     Lcd_Set_Cursor@temp:
   640                           
   641                           ; 1 bytes @ 0x6
   642     0076                     	ds	1
   643     0077                     ___lwdiv@counter:
   644                           
   645                           ; 1 bytes @ 0x7
   646     0077                     	ds	1
   647     0078                     ?___lwmod:
   648     0078                     Lcd_Write_String@i:	
   649                           ; 2 bytes @ 0x8
   650                           
   651     0078                     ___lwmod@divisor:	
   652                           ; 2 bytes @ 0x8
   653                           
   654                           
   655                           ; 2 bytes @ 0x8
   656     0078                     	ds	2
   657     007A                     ___lwmod@dividend:
   658                           
   659                           ; 2 bytes @ 0xA
   660     007A                     	ds	2
   661     007C                     ??___lwmod:
   662                           
   663                           ; 1 bytes @ 0xC
   664     007C                     	ds	1
   665     007D                     ___lwmod@counter:
   666                           
   667                           ; 1 bytes @ 0xD
   668     007D                     	ds	1
   669                           
   670                           	psect	cstackBANK0
   671     0032                     __pcstackBANK0:
   672     0032                     ?_sprintf:
   673     0032                     sprintf@f:	
   674                           ; 2 bytes @ 0x0
   675                           
   676                           
   677                           ; 1 bytes @ 0x0
   678     0032                     	ds	3
   679     0035                     ??_sprintf:
   680                           
   681                           ; 1 bytes @ 0x3
   682     0035                     	ds	3
   683     0038                     sprintf@ap:
   684                           
   685                           ; 1 bytes @ 0x6
   686     0038                     	ds	1
   687     0039                     sprintf@flag:
   688                           
   689                           ; 1 bytes @ 0x7
   690     0039                     	ds	1
   691     003A                     sprintf@prec:
   692                           
   693                           ; 1 bytes @ 0x8
   694     003A                     	ds	1
   695     003B                     sprintf@val:
   696                           
   697                           ; 2 bytes @ 0x9
   698     003B                     	ds	2
   699     003D                     sprintf@sp:
   700                           
   701                           ; 1 bytes @ 0xB
   702     003D                     	ds	1
   703     003E                     sprintf@c:
   704                           
   705                           ; 1 bytes @ 0xC
   706     003E                     	ds	1
   707     003F                     ??_main:
   708                           
   709                           ; 1 bytes @ 0xD
   710     003F                     	ds	3
   711                           
   712                           	psect	maintext
   713     0612                     __pmaintext:	
   714 ;;
   715 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   716 ;;
   717 ;; *************** function _main *****************
   718 ;; Defined at:
   719 ;;		line 71 in file "Principal.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : B00/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   733 ;;      Params:         0       0       0       0       0
   734 ;;      Locals:         0       0       0       0       0
   735 ;;      Temps:          0       3       0       0       0
   736 ;;      Totals:         0       3       0       0       0
   737 ;;Total ram usage:        3 bytes
   738 ;; Hardware stack levels required when called: 3
   739 ;; This function calls:
   740 ;;		_Lcd_Clear
   741 ;;		_Lcd_Init
   742 ;;		_Lcd_Set_Cursor
   743 ;;		_Lcd_Write_String
   744 ;;		_setup
   745 ;;		_spiRead
   746 ;;		_spiWrite
   747 ;;		_sprintf
   748 ;; This function is called by:
   749 ;;		Startup code after reset
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753     0612                     _main:	
   754                           ;psect for function _main
   755                           
   756     0612                     l1367:	
   757                           ;incstack = 0
   758                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   759                           
   760                           
   761                           ;Principal.c: 72:     setup();
   762     0612  120A  118A  23CE  120A  118A  	fcall	_setup
   763                           
   764                           ;Principal.c: 73:     Lcd_Init();
   765     0617  120A  118A  24ED  120A  118A  	fcall	_Lcd_Init
   766                           
   767                           ;Principal.c: 74:     Lcd_Clear();
   768     061C  120A  118A  2349  120A  118A  	fcall	_Lcd_Clear
   769                           
   770                           ;Principal.c: 76:     Lcd_Set_Cursor(1, 1);
   771     0621  01F4               	clrf	Lcd_Set_Cursor@b
   772     0622  0AF4               	incf	Lcd_Set_Cursor@b,f
   773     0623  3001               	movlw	1
   774     0624  120A  118A  23AE  120A  118A  	fcall	_Lcd_Set_Cursor
   775     0629                     l1369:
   776                           
   777                           ;Principal.c: 77:     Lcd_Write_String("POT1");
   778     0629  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   779     062A  00F3               	movwf	Lcd_Write_String@a
   780     062B  3080               	movlw	128
   781     062C  00F4               	movwf	Lcd_Write_String@a+1
   782     062D  120A  118A  2467  120A  118A  	fcall	_Lcd_Write_String
   783     0632                     l1371:
   784                           
   785                           ;Principal.c: 78:     Lcd_Set_Cursor(1, 6);
   786     0632  3006               	movlw	6
   787     0633  00F4               	movwf	Lcd_Set_Cursor@b
   788     0634  3001               	movlw	1
   789     0635  120A  118A  23AE  120A  118A  	fcall	_Lcd_Set_Cursor
   790                           
   791                           ;Principal.c: 79:     Lcd_Write_String("POT2");
   792     063A  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   793     063B  00F3               	movwf	Lcd_Write_String@a
   794     063C  3080               	movlw	128
   795     063D  00F4               	movwf	Lcd_Write_String@a+1
   796     063E  120A  118A  2467  120A  118A  	fcall	_Lcd_Write_String
   797     0643                     l1373:
   798                           
   799                           ;Principal.c: 80:     Lcd_Set_Cursor(1, 11);
   800     0643  300B               	movlw	11
   801     0644  00F4               	movwf	Lcd_Set_Cursor@b
   802     0645  3001               	movlw	1
   803     0646  120A  118A  23AE  120A  118A  	fcall	_Lcd_Set_Cursor
   804     064B                     l1375:
   805                           
   806                           ;Principal.c: 81:     Lcd_Write_String("CONT");
   807     064B  3015               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   808     064C  00F3               	movwf	Lcd_Write_String@a
   809     064D  3080               	movlw	128
   810     064E  00F4               	movwf	Lcd_Write_String@a+1
   811     064F  120A  118A  2467  120A  118A  	fcall	_Lcd_Write_String
   812     0654                     l1377:
   813                           
   814                           ;Principal.c: 84:         PORTCbits.RC2 = 0;
   815     0654  1283               	bcf	3,5	;RP0=0, select bank0
   816     0655  1303               	bcf	3,6	;RP1=0, select bank0
   817     0656  1107               	bcf	7,2	;volatile
   818     0657                     l1379:
   819                           
   820                           ;Principal.c: 85:         _delay((unsigned long)((1)*(8000000/4000.0)));
   821     0657  3003               	movlw	3
   822     0658  1283               	bcf	3,5	;RP0=0, select bank0
   823     0659  1303               	bcf	3,6	;RP1=0, select bank0
   824     065A  00C0               	movwf	??_main+1
   825     065B  3097               	movlw	151
   826     065C  00BF               	movwf	??_main
   827     065D                     u837:
   828     065D  0BBF               	decfsz	??_main,f
   829     065E  2E5D               	goto	u837
   830     065F  0BC0               	decfsz	??_main+1,f
   831     0660  2E5D               	goto	u837
   832     0661                     l1381:
   833                           
   834                           ;Principal.c: 86:         spiWrite(0);
   835     0661  3000               	movlw	0
   836     0662  120A  118A  2343  120A  118A  	fcall	_spiWrite
   837     0667                     l1383:
   838                           
   839                           ;Principal.c: 87:         POT1 = spiRead();
   840     0667  120A  118A  235F  120A  118A  	fcall	_spiRead
   841     066C  1283               	bcf	3,5	;RP0=0, select bank0
   842     066D  1303               	bcf	3,6	;RP1=0, select bank0
   843     066E  00BF               	movwf	??_main
   844     066F  01C0               	clrf	??_main+1
   845     0670  083F               	movf	??_main,w
   846     0671  00A4               	movwf	_POT1
   847     0672  0840               	movf	??_main+1,w
   848     0673  00A5               	movwf	_POT1+1
   849     0674                     l1385:
   850                           
   851                           ;Principal.c: 88:         _delay((unsigned long)((1)*(8000000/4000.0)));
   852     0674  3003               	movlw	3
   853     0675  1283               	bcf	3,5	;RP0=0, select bank0
   854     0676  1303               	bcf	3,6	;RP1=0, select bank0
   855     0677  00C0               	movwf	??_main+1
   856     0678  3097               	movlw	151
   857     0679  00BF               	movwf	??_main
   858     067A                     u847:
   859     067A  0BBF               	decfsz	??_main,f
   860     067B  2E7A               	goto	u847
   861     067C  0BC0               	decfsz	??_main+1,f
   862     067D  2E7A               	goto	u847
   863     067E                     l1387:
   864                           
   865                           ;Principal.c: 89:         PORTCbits.RC2 = 1;
   866     067E  1283               	bcf	3,5	;RP0=0, select bank0
   867     067F  1303               	bcf	3,6	;RP1=0, select bank0
   868     0680  1507               	bsf	7,2	;volatile
   869     0681                     l1389:
   870                           
   871                           ;Principal.c: 90:         _delay((unsigned long)((250)*(8000000/4000.0)));
   872     0681  3003               	movlw	3
   873     0682  1283               	bcf	3,5	;RP0=0, select bank0
   874     0683  1303               	bcf	3,6	;RP1=0, select bank0
   875     0684  00C1               	movwf	??_main+2
   876     0685  308A               	movlw	138
   877     0686  00C0               	movwf	??_main+1
   878     0687  3055               	movlw	85
   879     0688  00BF               	movwf	??_main
   880     0689                     u857:
   881     0689  0BBF               	decfsz	??_main,f
   882     068A  2E89               	goto	u857
   883     068B  0BC0               	decfsz	??_main+1,f
   884     068C  2E89               	goto	u857
   885     068D  0BC1               	decfsz	??_main+2,f
   886     068E  2E89               	goto	u857
   887     068F                     l1391:
   888                           
   889                           ;Principal.c: 92:         PORTCbits.RC1 = 0;
   890     068F  1283               	bcf	3,5	;RP0=0, select bank0
   891     0690  1303               	bcf	3,6	;RP1=0, select bank0
   892     0691  1087               	bcf	7,1	;volatile
   893     0692                     l1393:
   894                           
   895                           ;Principal.c: 93:         _delay((unsigned long)((1)*(8000000/4000.0)));
   896     0692  3003               	movlw	3
   897     0693  1283               	bcf	3,5	;RP0=0, select bank0
   898     0694  1303               	bcf	3,6	;RP1=0, select bank0
   899     0695  00C0               	movwf	??_main+1
   900     0696  3097               	movlw	151
   901     0697  00BF               	movwf	??_main
   902     0698                     u867:
   903     0698  0BBF               	decfsz	??_main,f
   904     0699  2E98               	goto	u867
   905     069A  0BC0               	decfsz	??_main+1,f
   906     069B  2E98               	goto	u867
   907                           
   908                           ;Principal.c: 94:         spiWrite(1);
   909     069C  3001               	movlw	1
   910     069D  120A  118A  2343  120A  118A  	fcall	_spiWrite
   911                           
   912                           ;Principal.c: 95:         POT2 = spiRead();
   913     06A2  120A  118A  235F  120A  118A  	fcall	_spiRead
   914     06A7  1283               	bcf	3,5	;RP0=0, select bank0
   915     06A8  1303               	bcf	3,6	;RP1=0, select bank0
   916     06A9  00BF               	movwf	??_main
   917     06AA  01C0               	clrf	??_main+1
   918     06AB  083F               	movf	??_main,w
   919     06AC  00A2               	movwf	_POT2
   920     06AD  0840               	movf	??_main+1,w
   921     06AE  00A3               	movwf	_POT2+1
   922     06AF                     l1395:
   923                           
   924                           ;Principal.c: 96:         _delay((unsigned long)((1)*(8000000/4000.0)));
   925     06AF  3003               	movlw	3
   926     06B0  1283               	bcf	3,5	;RP0=0, select bank0
   927     06B1  1303               	bcf	3,6	;RP1=0, select bank0
   928     06B2  00C0               	movwf	??_main+1
   929     06B3  3097               	movlw	151
   930     06B4  00BF               	movwf	??_main
   931     06B5                     u877:
   932     06B5  0BBF               	decfsz	??_main,f
   933     06B6  2EB5               	goto	u877
   934     06B7  0BC0               	decfsz	??_main+1,f
   935     06B8  2EB5               	goto	u877
   936     06B9                     l1397:
   937                           
   938                           ;Principal.c: 97:         PORTCbits.RC1 = 1;
   939     06B9  1283               	bcf	3,5	;RP0=0, select bank0
   940     06BA  1303               	bcf	3,6	;RP1=0, select bank0
   941     06BB  1487               	bsf	7,1	;volatile
   942     06BC                     l1399:
   943                           
   944                           ;Principal.c: 98:         _delay((unsigned long)((250)*(8000000/4000.0)));
   945     06BC  3003               	movlw	3
   946     06BD  1283               	bcf	3,5	;RP0=0, select bank0
   947     06BE  1303               	bcf	3,6	;RP1=0, select bank0
   948     06BF  00C1               	movwf	??_main+2
   949     06C0  308A               	movlw	138
   950     06C1  00C0               	movwf	??_main+1
   951     06C2  3055               	movlw	85
   952     06C3  00BF               	movwf	??_main
   953     06C4                     u887:
   954     06C4  0BBF               	decfsz	??_main,f
   955     06C5  2EC4               	goto	u887
   956     06C6  0BC0               	decfsz	??_main+1,f
   957     06C7  2EC4               	goto	u887
   958     06C8  0BC1               	decfsz	??_main+2,f
   959     06C9  2EC4               	goto	u887
   960     06CA                     l1401:
   961                           
   962                           ;Principal.c: 100:         PORTCbits.RC1 = 0;
   963     06CA  1283               	bcf	3,5	;RP0=0, select bank0
   964     06CB  1303               	bcf	3,6	;RP1=0, select bank0
   965     06CC  1087               	bcf	7,1	;volatile
   966     06CD                     l1403:
   967                           
   968                           ;Principal.c: 101:         _delay((unsigned long)((1)*(8000000/4000.0)));
   969     06CD  3003               	movlw	3
   970     06CE  1283               	bcf	3,5	;RP0=0, select bank0
   971     06CF  1303               	bcf	3,6	;RP1=0, select bank0
   972     06D0  00C0               	movwf	??_main+1
   973     06D1  3097               	movlw	151
   974     06D2  00BF               	movwf	??_main
   975     06D3                     u897:
   976     06D3  0BBF               	decfsz	??_main,f
   977     06D4  2ED3               	goto	u897
   978     06D5  0BC0               	decfsz	??_main+1,f
   979     06D6  2ED3               	goto	u897
   980     06D7                     l1405:
   981                           
   982                           ;Principal.c: 102:         spiWrite(0);
   983     06D7  3000               	movlw	0
   984     06D8  120A  118A  2343  120A  118A  	fcall	_spiWrite
   985     06DD                     l1407:
   986                           
   987                           ;Principal.c: 103:         CONT = spiRead();
   988     06DD  120A  118A  235F  120A  118A  	fcall	_spiRead
   989     06E2  1283               	bcf	3,5	;RP0=0, select bank0
   990     06E3  1303               	bcf	3,6	;RP1=0, select bank0
   991     06E4  00BF               	movwf	??_main
   992     06E5  01C0               	clrf	??_main+1
   993     06E6  083F               	movf	??_main,w
   994     06E7  00A0               	movwf	_CONT
   995     06E8  0840               	movf	??_main+1,w
   996     06E9  00A1               	movwf	_CONT+1
   997     06EA                     l1409:
   998                           
   999                           ;Principal.c: 104:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1000     06EA  3003               	movlw	3
  1001     06EB  1283               	bcf	3,5	;RP0=0, select bank0
  1002     06EC  1303               	bcf	3,6	;RP1=0, select bank0
  1003     06ED  00C0               	movwf	??_main+1
  1004     06EE  3097               	movlw	151
  1005     06EF  00BF               	movwf	??_main
  1006     06F0                     u907:
  1007     06F0  0BBF               	decfsz	??_main,f
  1008     06F1  2EF0               	goto	u907
  1009     06F2  0BC0               	decfsz	??_main+1,f
  1010     06F3  2EF0               	goto	u907
  1011     06F4                     l1411:
  1012                           
  1013                           ;Principal.c: 105:         PORTCbits.RC1 = 1;
  1014     06F4  1283               	bcf	3,5	;RP0=0, select bank0
  1015     06F5  1303               	bcf	3,6	;RP1=0, select bank0
  1016     06F6  1487               	bsf	7,1	;volatile
  1017     06F7                     l1413:
  1018                           
  1019                           ;Principal.c: 106:         _delay((unsigned long)((250)*(8000000/4000.0)));
  1020     06F7  3003               	movlw	3
  1021     06F8  1283               	bcf	3,5	;RP0=0, select bank0
  1022     06F9  1303               	bcf	3,6	;RP1=0, select bank0
  1023     06FA  00C1               	movwf	??_main+2
  1024     06FB  308A               	movlw	138
  1025     06FC  00C0               	movwf	??_main+1
  1026     06FD  3055               	movlw	85
  1027     06FE  00BF               	movwf	??_main
  1028     06FF                     u917:
  1029     06FF  0BBF               	decfsz	??_main,f
  1030     0700  2EFF               	goto	u917
  1031     0701  0BC0               	decfsz	??_main+1,f
  1032     0702  2EFF               	goto	u917
  1033     0703  0BC1               	decfsz	??_main+2,f
  1034     0704  2EFF               	goto	u917
  1035     0705                     l1415:
  1036                           
  1037                           ;Principal.c: 108:         Lcd_Set_Cursor(2, 1);
  1038     0705  01F4               	clrf	Lcd_Set_Cursor@b
  1039     0706  0AF4               	incf	Lcd_Set_Cursor@b,f
  1040     0707  3002               	movlw	2
  1041     0708  120A  118A  23AE  120A  118A  	fcall	_Lcd_Set_Cursor
  1042     070D                     l1417:
  1043                           
  1044                           ;Principal.c: 109:         sprintf(cPOT1, "%d", POT1);
  1045     070D  301A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1046     070E  1283               	bcf	3,5	;RP0=0, select bank0
  1047     070F  1303               	bcf	3,6	;RP1=0, select bank0
  1048     0710  00B2               	movwf	sprintf@f
  1049     0711  0825               	movf	_POT1+1,w
  1050     0712  00B4               	movwf	?_sprintf+2
  1051     0713  0824               	movf	_POT1,w
  1052     0714  00B3               	movwf	?_sprintf+1
  1053     0715  302E               	movlw	(low (_cPOT1| 0))& (0+255)
  1054     0716  120A  118A  2538  120A  118A  	fcall	_sprintf
  1055     071B                     l1419:
  1056                           
  1057                           ;Principal.c: 110:         if(POT1 < 10){
  1058     071B  1283               	bcf	3,5	;RP0=0, select bank0
  1059     071C  1303               	bcf	3,6	;RP1=0, select bank0
  1060     071D  0825               	movf	_POT1+1,w
  1061     071E  3A80               	xorlw	128
  1062     071F  00FF               	movwf	btemp+1
  1063     0720  3080               	movlw	128
  1064     0721  027F               	subwf	btemp+1,w
  1065     0722  1D03               	skipz
  1066     0723  2F26               	goto	u775
  1067     0724  300A               	movlw	10
  1068     0725  0224               	subwf	_POT1,w
  1069     0726                     u775:
  1070     0726  1803               	skipnc
  1071     0727  2F29               	goto	u771
  1072     0728  2F2A               	goto	u770
  1073     0729                     u771:
  1074     0729  2F33               	goto	l1423
  1075     072A                     u770:
  1076     072A                     l1421:
  1077                           
  1078                           ;Principal.c: 111:             cPOT1[2] = cPOT1[0];
  1079     072A  1283               	bcf	3,5	;RP0=0, select bank0
  1080     072B  1303               	bcf	3,6	;RP1=0, select bank0
  1081     072C  082E               	movf	_cPOT1,w
  1082     072D  00B0               	movwf	_cPOT1+2
  1083                           
  1084                           ;Principal.c: 112:             cPOT1[1] = '0';
  1085     072E  3030               	movlw	48
  1086     072F  00AF               	movwf	_cPOT1+1
  1087                           
  1088                           ;Principal.c: 113:             cPOT1[0] = '0';
  1089     0730  3030               	movlw	48
  1090     0731  00AE               	movwf	_cPOT1
  1091                           
  1092                           ;Principal.c: 114:         }
  1093     0732  2F4A               	goto	l1427
  1094     0733                     l1423:
  1095     0733  1283               	bcf	3,5	;RP0=0, select bank0
  1096     0734  1303               	bcf	3,6	;RP1=0, select bank0
  1097     0735  0825               	movf	_POT1+1,w
  1098     0736  3A80               	xorlw	128
  1099     0737  00FF               	movwf	btemp+1
  1100     0738  3080               	movlw	128
  1101     0739  027F               	subwf	btemp+1,w
  1102     073A  1D03               	skipz
  1103     073B  2F3E               	goto	u785
  1104     073C  3064               	movlw	100
  1105     073D  0224               	subwf	_POT1,w
  1106     073E                     u785:
  1107     073E  1803               	skipnc
  1108     073F  2F41               	goto	u781
  1109     0740  2F42               	goto	u780
  1110     0741                     u781:
  1111     0741  2F4A               	goto	l1427
  1112     0742                     u780:
  1113     0742                     l1425:
  1114                           
  1115                           ;Principal.c: 116:             cPOT1[2] = cPOT1[1];
  1116     0742  1283               	bcf	3,5	;RP0=0, select bank0
  1117     0743  1303               	bcf	3,6	;RP1=0, select bank0
  1118     0744  082F               	movf	_cPOT1+1,w
  1119     0745  00B0               	movwf	_cPOT1+2
  1120                           
  1121                           ;Principal.c: 117:             cPOT1[1] = cPOT1[0];
  1122     0746  082E               	movf	_cPOT1,w
  1123     0747  00AF               	movwf	_cPOT1+1
  1124                           
  1125                           ;Principal.c: 118:             cPOT1[0] = '0';
  1126     0748  3030               	movlw	48
  1127     0749  00AE               	movwf	_cPOT1
  1128     074A                     l1427:
  1129                           
  1130                           ;Principal.c: 120:         Lcd_Write_String(cPOT1);
  1131     074A  302E               	movlw	(low (_cPOT1| 0))& (0+255)
  1132     074B  00F3               	movwf	Lcd_Write_String@a
  1133     074C  3000               	movlw	0
  1134     074D  00F4               	movwf	Lcd_Write_String@a+1
  1135     074E  120A  118A  2467  120A  118A  	fcall	_Lcd_Write_String
  1136     0753                     l1429:
  1137                           
  1138                           ;Principal.c: 122:         Lcd_Set_Cursor(2, 6);
  1139     0753  3006               	movlw	6
  1140     0754  00F4               	movwf	Lcd_Set_Cursor@b
  1141     0755  3002               	movlw	2
  1142     0756  120A  118A  23AE  120A  118A  	fcall	_Lcd_Set_Cursor
  1143     075B                     l1431:
  1144                           
  1145                           ;Principal.c: 123:         sprintf(cPOT2, "%d", POT2);
  1146     075B  301A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1147     075C  1283               	bcf	3,5	;RP0=0, select bank0
  1148     075D  1303               	bcf	3,6	;RP1=0, select bank0
  1149     075E  00B2               	movwf	sprintf@f
  1150     075F  0823               	movf	_POT2+1,w
  1151     0760  00B4               	movwf	?_sprintf+2
  1152     0761  0822               	movf	_POT2,w
  1153     0762  00B3               	movwf	?_sprintf+1
  1154     0763  302A               	movlw	(low (_cPOT2| 0))& (0+255)
  1155     0764  120A  118A  2538  120A  118A  	fcall	_sprintf
  1156     0769                     l1433:
  1157                           
  1158                           ;Principal.c: 124:         if(POT2 < 10){
  1159     0769  1283               	bcf	3,5	;RP0=0, select bank0
  1160     076A  1303               	bcf	3,6	;RP1=0, select bank0
  1161     076B  0823               	movf	_POT2+1,w
  1162     076C  3A80               	xorlw	128
  1163     076D  00FF               	movwf	btemp+1
  1164     076E  3080               	movlw	128
  1165     076F  027F               	subwf	btemp+1,w
  1166     0770  1D03               	skipz
  1167     0771  2F74               	goto	u795
  1168     0772  300A               	movlw	10
  1169     0773  0222               	subwf	_POT2,w
  1170     0774                     u795:
  1171     0774  1803               	skipnc
  1172     0775  2F77               	goto	u791
  1173     0776  2F78               	goto	u790
  1174     0777                     u791:
  1175     0777  2F81               	goto	l1437
  1176     0778                     u790:
  1177     0778                     l1435:
  1178                           
  1179                           ;Principal.c: 125:             cPOT2[2] = cPOT2[0];
  1180     0778  1283               	bcf	3,5	;RP0=0, select bank0
  1181     0779  1303               	bcf	3,6	;RP1=0, select bank0
  1182     077A  082A               	movf	_cPOT2,w
  1183     077B  00AC               	movwf	_cPOT2+2
  1184                           
  1185                           ;Principal.c: 126:             cPOT2[1] = '0';
  1186     077C  3030               	movlw	48
  1187     077D  00AB               	movwf	_cPOT2+1
  1188                           
  1189                           ;Principal.c: 127:             cPOT2[0] = '0';
  1190     077E  3030               	movlw	48
  1191     077F  00AA               	movwf	_cPOT2
  1192                           
  1193                           ;Principal.c: 128:         }
  1194     0780  2F98               	goto	l1441
  1195     0781                     l1437:
  1196     0781  1283               	bcf	3,5	;RP0=0, select bank0
  1197     0782  1303               	bcf	3,6	;RP1=0, select bank0
  1198     0783  0823               	movf	_POT2+1,w
  1199     0784  3A80               	xorlw	128
  1200     0785  00FF               	movwf	btemp+1
  1201     0786  3080               	movlw	128
  1202     0787  027F               	subwf	btemp+1,w
  1203     0788  1D03               	skipz
  1204     0789  2F8C               	goto	u805
  1205     078A  3064               	movlw	100
  1206     078B  0222               	subwf	_POT2,w
  1207     078C                     u805:
  1208     078C  1803               	skipnc
  1209     078D  2F8F               	goto	u801
  1210     078E  2F90               	goto	u800
  1211     078F                     u801:
  1212     078F  2F98               	goto	l1441
  1213     0790                     u800:
  1214     0790                     l1439:
  1215                           
  1216                           ;Principal.c: 130:             cPOT2[2] = cPOT2[1];
  1217     0790  1283               	bcf	3,5	;RP0=0, select bank0
  1218     0791  1303               	bcf	3,6	;RP1=0, select bank0
  1219     0792  082B               	movf	_cPOT2+1,w
  1220     0793  00AC               	movwf	_cPOT2+2
  1221                           
  1222                           ;Principal.c: 131:             cPOT2[1] = cPOT2[0];
  1223     0794  082A               	movf	_cPOT2,w
  1224     0795  00AB               	movwf	_cPOT2+1
  1225                           
  1226                           ;Principal.c: 132:             cPOT2[0] = '0';
  1227     0796  3030               	movlw	48
  1228     0797  00AA               	movwf	_cPOT2
  1229     0798                     l1441:
  1230                           
  1231                           ;Principal.c: 134:         Lcd_Write_String(cPOT2);
  1232     0798  302A               	movlw	(low (_cPOT2| 0))& (0+255)
  1233     0799  00F3               	movwf	Lcd_Write_String@a
  1234     079A  3000               	movlw	0
  1235     079B  00F4               	movwf	Lcd_Write_String@a+1
  1236     079C  120A  118A  2467  120A  118A  	fcall	_Lcd_Write_String
  1237     07A1                     l1443:
  1238                           
  1239                           ;Principal.c: 136:         Lcd_Set_Cursor(2, 11);
  1240     07A1  300B               	movlw	11
  1241     07A2  00F4               	movwf	Lcd_Set_Cursor@b
  1242     07A3  3002               	movlw	2
  1243     07A4  120A  118A  23AE  120A  118A  	fcall	_Lcd_Set_Cursor
  1244     07A9                     l1445:
  1245                           
  1246                           ;Principal.c: 137:         sprintf(cCONT, "%d", CONT);
  1247     07A9  301A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1248     07AA  1283               	bcf	3,5	;RP0=0, select bank0
  1249     07AB  1303               	bcf	3,6	;RP1=0, select bank0
  1250     07AC  00B2               	movwf	sprintf@f
  1251     07AD  0821               	movf	_CONT+1,w
  1252     07AE  00B4               	movwf	?_sprintf+2
  1253     07AF  0820               	movf	_CONT,w
  1254     07B0  00B3               	movwf	?_sprintf+1
  1255     07B1  3026               	movlw	(low (_cCONT| 0))& (0+255)
  1256     07B2  120A  118A  2538  120A  118A  	fcall	_sprintf
  1257     07B7                     l1447:
  1258                           
  1259                           ;Principal.c: 138:         if(CONT < 10){
  1260     07B7  1283               	bcf	3,5	;RP0=0, select bank0
  1261     07B8  1303               	bcf	3,6	;RP1=0, select bank0
  1262     07B9  0821               	movf	_CONT+1,w
  1263     07BA  3A80               	xorlw	128
  1264     07BB  00FF               	movwf	btemp+1
  1265     07BC  3080               	movlw	128
  1266     07BD  027F               	subwf	btemp+1,w
  1267     07BE  1D03               	skipz
  1268     07BF  2FC2               	goto	u815
  1269     07C0  300A               	movlw	10
  1270     07C1  0220               	subwf	_CONT,w
  1271     07C2                     u815:
  1272     07C2  1803               	skipnc
  1273     07C3  2FC5               	goto	u811
  1274     07C4  2FC6               	goto	u810
  1275     07C5                     u811:
  1276     07C5  2FCF               	goto	l1451
  1277     07C6                     u810:
  1278     07C6                     l1449:
  1279                           
  1280                           ;Principal.c: 139:             cCONT[2] = cCONT[0];
  1281     07C6  1283               	bcf	3,5	;RP0=0, select bank0
  1282     07C7  1303               	bcf	3,6	;RP1=0, select bank0
  1283     07C8  0826               	movf	_cCONT,w
  1284     07C9  00A8               	movwf	_cCONT+2
  1285                           
  1286                           ;Principal.c: 140:             cCONT[1] = '0';
  1287     07CA  3030               	movlw	48
  1288     07CB  00A7               	movwf	_cCONT+1
  1289                           
  1290                           ;Principal.c: 141:             cCONT[0] = '0';
  1291     07CC  3030               	movlw	48
  1292     07CD  00A6               	movwf	_cCONT
  1293                           
  1294                           ;Principal.c: 142:         }
  1295     07CE  2FE6               	goto	l1455
  1296     07CF                     l1451:
  1297     07CF  1283               	bcf	3,5	;RP0=0, select bank0
  1298     07D0  1303               	bcf	3,6	;RP1=0, select bank0
  1299     07D1  0821               	movf	_CONT+1,w
  1300     07D2  3A80               	xorlw	128
  1301     07D3  00FF               	movwf	btemp+1
  1302     07D4  3080               	movlw	128
  1303     07D5  027F               	subwf	btemp+1,w
  1304     07D6  1D03               	skipz
  1305     07D7  2FDA               	goto	u825
  1306     07D8  3064               	movlw	100
  1307     07D9  0220               	subwf	_CONT,w
  1308     07DA                     u825:
  1309     07DA  1803               	skipnc
  1310     07DB  2FDD               	goto	u821
  1311     07DC  2FDE               	goto	u820
  1312     07DD                     u821:
  1313     07DD  2FE6               	goto	l1455
  1314     07DE                     u820:
  1315     07DE                     l1453:
  1316                           
  1317                           ;Principal.c: 144:             cCONT[2] = cCONT[1];
  1318     07DE  1283               	bcf	3,5	;RP0=0, select bank0
  1319     07DF  1303               	bcf	3,6	;RP1=0, select bank0
  1320     07E0  0827               	movf	_cCONT+1,w
  1321     07E1  00A8               	movwf	_cCONT+2
  1322                           
  1323                           ;Principal.c: 145:             cCONT[1] = cCONT[0];
  1324     07E2  0826               	movf	_cCONT,w
  1325     07E3  00A7               	movwf	_cCONT+1
  1326                           
  1327                           ;Principal.c: 146:             cCONT[0] = '0';
  1328     07E4  3030               	movlw	48
  1329     07E5  00A6               	movwf	_cCONT
  1330     07E6                     l1455:
  1331                           
  1332                           ;Principal.c: 148:         Lcd_Write_String(cCONT);
  1333     07E6  3026               	movlw	(low (_cCONT| 0))& (0+255)
  1334     07E7  00F3               	movwf	Lcd_Write_String@a
  1335     07E8  3000               	movlw	0
  1336     07E9  00F4               	movwf	Lcd_Write_String@a+1
  1337     07EA  120A  118A  2467  120A  118A  	fcall	_Lcd_Write_String
  1338     07EF  2E54               	goto	l1377
  1339     07F0  120A  118A  2800   	ljmp	start
  1340     07F3                     __end_of_main:
  1341                           
  1342                           	psect	text1
  1343     0538                     __ptext1:	
  1344 ;; *************** function _sprintf *****************
  1345 ;; Defined at:
  1346 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;  sp              1    wreg     PTR unsigned char 
  1349 ;;		 -> cCONT(4), cPOT2(4), cPOT1(4), 
  1350 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1351 ;;		 -> STR_6(3), STR_5(3), STR_4(3), 
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1354 ;;		 -> cCONT(4), cPOT2(4), cPOT1(4), 
  1355 ;;  tmpval          4    0        struct .
  1356 ;;  val             2    9[BANK0 ] unsigned int 
  1357 ;;  cp              2    0        PTR const unsigned char 
  1358 ;;  len             2    0        unsigned int 
  1359 ;;  c               1   12[BANK0 ] unsigned char 
  1360 ;;  prec            1    8[BANK0 ] char 
  1361 ;;  flag            1    7[BANK0 ] unsigned char 
  1362 ;;  ap              1    6[BANK0 ] PTR void [1]
  1363 ;;		 -> ?_sprintf(2), 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  2    0[BANK0 ] int 
  1366 ;; Registers used:
  1367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1373 ;;      Params:         0       3       0       0       0
  1374 ;;      Locals:         0       7       0       0       0
  1375 ;;      Temps:          0       3       0       0       0
  1376 ;;      Totals:         0      13       0       0       0
  1377 ;;Total ram usage:       13 bytes
  1378 ;; Hardware stack levels used: 1
  1379 ;; Hardware stack levels required when called: 1
  1380 ;; This function calls:
  1381 ;;		___lwdiv
  1382 ;;		___lwmod
  1383 ;; This function is called by:
  1384 ;;		_main
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388     0538                     _sprintf:	
  1389                           ;psect for function _sprintf
  1390                           
  1391                           
  1392                           ;incstack = 0
  1393                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1394                           ;sprintf@sp stored from wreg
  1395     0538  1283               	bcf	3,5	;RP0=0, select bank0
  1396     0539  1303               	bcf	3,6	;RP1=0, select bank0
  1397     053A  00BD               	movwf	sprintf@sp
  1398     053B                     l1305:
  1399                           
  1400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1401     053B  3033               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1402     053C  00B8               	movwf	sprintf@ap
  1403                           
  1404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1405     053D  2DFD               	goto	l1357
  1406     053E                     l1307:
  1407                           
  1408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1409     053E  3025               	movlw	37
  1410     053F  063E               	xorwf	sprintf@c,w
  1411     0540  1903               	btfsc	3,2
  1412     0541  2D43               	goto	u701
  1413     0542  2D44               	goto	u700
  1414     0543                     u701:
  1415     0543  2D4E               	goto	l1313
  1416     0544                     u700:
  1417     0544                     l1309:
  1418                           
  1419                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1420     0544  083D               	movf	sprintf@sp,w
  1421     0545  0084               	movwf	4
  1422     0546  083E               	movf	sprintf@c,w
  1423     0547  1383               	bcf	3,7	;select IRP bank0
  1424     0548  0080               	movwf	0
  1425     0549                     l1311:
  1426     0549  3001               	movlw	1
  1427     054A  00B5               	movwf	??_sprintf
  1428     054B  0835               	movf	??_sprintf,w
  1429     054C  07BD               	addwf	sprintf@sp,f
  1430                           
  1431                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1432     054D  2DFD               	goto	l1357
  1433     054E                     l1313:
  1434                           
  1435                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1436     054E  01B9               	clrf	sprintf@flag
  1437     054F                     l1317:	
  1438                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1439                           
  1440     054F  3001               	movlw	1
  1441     0550  07B2               	addwf	sprintf@f,f
  1442     0551  30FF               	movlw	-1
  1443     0552  0732               	addwf	sprintf@f,w
  1444     0553  0084               	movwf	4
  1445     0554  120A  118A  200D  120A  118A  	fcall	stringdir
  1446     0559  00BE               	movwf	sprintf@c
  1447     055A  00B5               	movwf	??_sprintf
  1448     055B  01B6               	clrf	??_sprintf+1
  1449                           
  1450                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1451                           ; Switch size 1, requested type "simple"
  1452                           ; Number of cases is 1, Range of values is 0 to 0
  1453                           ; switch strategies available:
  1454                           ; Name         Instructions Cycles
  1455                           ; simple_byte            4     3 (average)
  1456                           ; direct_byte           11     8 (fixed)
  1457                           ; jumptable            260     6 (fixed)
  1458                           ;	Chosen strategy is simple_byte
  1459     055C  0836               	movf	??_sprintf+1,w
  1460     055D  3A00               	xorlw	0	; case 0
  1461     055E  1903               	skipnz
  1462     055F  2D61               	goto	l1481
  1463     0560  2DFD               	goto	l1357
  1464     0561                     l1481:
  1465                           
  1466                           ; Switch size 1, requested type "simple"
  1467                           ; Number of cases is 3, Range of values is 0 to 105
  1468                           ; switch strategies available:
  1469                           ; Name         Instructions Cycles
  1470                           ; simple_byte           10     6 (average)
  1471                           ; jumptable            260     6 (fixed)
  1472                           ;	Chosen strategy is simple_byte
  1473     0561  0835               	movf	??_sprintf,w
  1474     0562  3A00               	xorlw	0	; case 0
  1475     0563  1903               	skipnz
  1476     0564  2E0D               	goto	l1359
  1477     0565  3A64               	xorlw	100	; case 100
  1478     0566  1903               	skipnz
  1479     0567  2D6C               	goto	l1319
  1480     0568  3A0D               	xorlw	13	; case 105
  1481     0569  1903               	skipnz
  1482     056A  2D6C               	goto	l1319
  1483     056B  2DFD               	goto	l1357
  1484     056C                     l1319:
  1485                           
  1486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1487     056C  0838               	movf	sprintf@ap,w
  1488     056D  0084               	movwf	4
  1489     056E  1383               	bcf	3,7	;select IRP bank0
  1490     056F  0800               	movf	0,w
  1491     0570  00BB               	movwf	sprintf@val
  1492     0571  0A84               	incf	4,f
  1493     0572  0800               	movf	0,w
  1494     0573  00BC               	movwf	sprintf@val+1
  1495     0574                     l1321:
  1496     0574  3002               	movlw	2
  1497     0575  00B5               	movwf	??_sprintf
  1498     0576  0835               	movf	??_sprintf,w
  1499     0577  07B8               	addwf	sprintf@ap,f
  1500     0578                     l1323:
  1501                           
  1502                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1503     0578  1FBC               	btfss	sprintf@val+1,7
  1504     0579  2D7B               	goto	u711
  1505     057A  2D7C               	goto	u710
  1506     057B                     u711:
  1507     057B  2D85               	goto	l1329
  1508     057C                     u710:
  1509     057C                     l1325:
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1512     057C  3003               	movlw	3
  1513     057D  00B5               	movwf	??_sprintf
  1514     057E  0835               	movf	??_sprintf,w
  1515     057F  04B9               	iorwf	sprintf@flag,f
  1516     0580                     l1327:
  1517                           
  1518                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1519     0580  09BB               	comf	sprintf@val,f
  1520     0581  09BC               	comf	sprintf@val+1,f
  1521     0582  0ABB               	incf	sprintf@val,f
  1522     0583  1903               	skipnz
  1523     0584  0ABC               	incf	sprintf@val+1,f
  1524     0585                     l1329:
  1525                           
  1526                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1527     0585  01BE               	clrf	sprintf@c
  1528     0586  0ABE               	incf	sprintf@c,f
  1529     0587                     l1335:
  1530                           
  1531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1532     0587  083E               	movf	sprintf@c,w
  1533     0588  00B5               	movwf	??_sprintf
  1534     0589  0735               	addwf	??_sprintf,w
  1535     058A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1536     058B  0084               	movwf	4
  1537     058C  120A  118A  200D  120A  118A  	fcall	stringdir
  1538     0591  00B6               	movwf	??_sprintf+1
  1539     0592  120A  118A  200D  120A  118A  	fcall	stringdir
  1540     0597  00B7               	movwf	??_sprintf+2
  1541     0598  0837               	movf	??_sprintf+2,w
  1542     0599  023C               	subwf	sprintf@val+1,w
  1543     059A  1D03               	skipz
  1544     059B  2D9E               	goto	u725
  1545     059C  0836               	movf	??_sprintf+1,w
  1546     059D  023B               	subwf	sprintf@val,w
  1547     059E                     u725:
  1548     059E  1803               	skipnc
  1549     059F  2DA1               	goto	u721
  1550     05A0  2DA2               	goto	u720
  1551     05A1                     u721:
  1552     05A1  2DA3               	goto	l1339
  1553     05A2                     u720:
  1554     05A2  2DAD               	goto	l1341
  1555     05A3                     l1339:
  1556     05A3  3001               	movlw	1
  1557     05A4  00B5               	movwf	??_sprintf
  1558     05A5  0835               	movf	??_sprintf,w
  1559     05A6  07BE               	addwf	sprintf@c,f
  1560     05A7  3005               	movlw	5
  1561     05A8  063E               	xorwf	sprintf@c,w
  1562     05A9  1D03               	btfss	3,2
  1563     05AA  2DAC               	goto	u731
  1564     05AB  2DAD               	goto	u730
  1565     05AC                     u731:
  1566     05AC  2D87               	goto	l1335
  1567     05AD                     u730:
  1568     05AD                     l1341:
  1569                           
  1570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1571     05AD  0839               	movf	sprintf@flag,w
  1572     05AE  3903               	andlw	3
  1573     05AF  1903               	btfsc	3,2
  1574     05B0  2DB2               	goto	u741
  1575     05B1  2DB3               	goto	u740
  1576     05B2                     u741:
  1577     05B2  2DBC               	goto	l1347
  1578     05B3                     u740:
  1579     05B3                     l1343:
  1580                           
  1581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1582     05B3  083D               	movf	sprintf@sp,w
  1583     05B4  0084               	movwf	4
  1584     05B5  302D               	movlw	45
  1585     05B6  1383               	bcf	3,7	;select IRP bank0
  1586     05B7  0080               	movwf	0
  1587     05B8                     l1345:
  1588     05B8  3001               	movlw	1
  1589     05B9  00B5               	movwf	??_sprintf
  1590     05BA  0835               	movf	??_sprintf,w
  1591     05BB  07BD               	addwf	sprintf@sp,f
  1592     05BC                     l1347:
  1593                           
  1594                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1595     05BC  083E               	movf	sprintf@c,w
  1596     05BD  00BA               	movwf	sprintf@prec
  1597                           
  1598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1599     05BE  2DF4               	goto	l1355
  1600     05BF                     l1349:
  1601                           
  1602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1603     05BF  300A               	movlw	10
  1604     05C0  00F8               	movwf	___lwmod@divisor
  1605     05C1  3000               	movlw	0
  1606     05C2  00F9               	movwf	___lwmod@divisor+1
  1607     05C3  083A               	movf	sprintf@prec,w
  1608     05C4  00B5               	movwf	??_sprintf
  1609     05C5  0735               	addwf	??_sprintf,w
  1610     05C6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1611     05C7  0084               	movwf	4
  1612     05C8  120A  118A  200D  120A  118A  	fcall	stringdir
  1613     05CD  00F0               	movwf	___lwdiv@divisor
  1614     05CE  120A  118A  200D  120A  118A  	fcall	stringdir
  1615     05D3  00F1               	movwf	___lwdiv@divisor+1
  1616     05D4  083C               	movf	sprintf@val+1,w
  1617     05D5  00F3               	movwf	___lwdiv@dividend+1
  1618     05D6  083B               	movf	sprintf@val,w
  1619     05D7  00F2               	movwf	___lwdiv@dividend
  1620     05D8  120A  118A  24A9  120A  118A  	fcall	___lwdiv
  1621     05DD  0871               	movf	?___lwdiv+1,w
  1622     05DE  00FB               	movwf	___lwmod@dividend+1
  1623     05DF  0870               	movf	?___lwdiv,w
  1624     05E0  00FA               	movwf	___lwmod@dividend
  1625     05E1  120A  118A  23EF  120A  118A  	fcall	___lwmod
  1626     05E6  0878               	movf	?___lwmod,w
  1627     05E7  3E30               	addlw	48
  1628     05E8  1283               	bcf	3,5	;RP0=0, select bank0
  1629     05E9  1303               	bcf	3,6	;RP1=0, select bank0
  1630     05EA  00BE               	movwf	sprintf@c
  1631     05EB                     l1351:
  1632                           
  1633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1634     05EB  083D               	movf	sprintf@sp,w
  1635     05EC  0084               	movwf	4
  1636     05ED  083E               	movf	sprintf@c,w
  1637     05EE  1383               	bcf	3,7	;select IRP bank0
  1638     05EF  0080               	movwf	0
  1639     05F0                     l1353:
  1640     05F0  3001               	movlw	1
  1641     05F1  00B5               	movwf	??_sprintf
  1642     05F2  0835               	movf	??_sprintf,w
  1643     05F3  07BD               	addwf	sprintf@sp,f
  1644     05F4                     l1355:
  1645                           
  1646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1647     05F4  30FF               	movlw	255
  1648     05F5  00B5               	movwf	??_sprintf
  1649     05F6  0835               	movf	??_sprintf,w
  1650     05F7  07BA               	addwf	sprintf@prec,f
  1651     05F8  0A3A               	incf	sprintf@prec,w
  1652     05F9  1D03               	btfss	3,2
  1653     05FA  2DFC               	goto	u751
  1654     05FB  2DFD               	goto	u750
  1655     05FC                     u751:
  1656     05FC  2DBF               	goto	l1349
  1657     05FD                     u750:
  1658     05FD                     l1357:
  1659                           
  1660                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1661     05FD  3001               	movlw	1
  1662     05FE  07B2               	addwf	sprintf@f,f
  1663     05FF  30FF               	movlw	-1
  1664     0600  0732               	addwf	sprintf@f,w
  1665     0601  0084               	movwf	4
  1666     0602  120A  118A  200D  120A  118A  	fcall	stringdir
  1667     0607  00BE               	movwf	sprintf@c
  1668     0608  083E               	movf	sprintf@c,w
  1669     0609  1D03               	btfss	3,2
  1670     060A  2E0C               	goto	u761
  1671     060B  2E0D               	goto	u760
  1672     060C                     u761:
  1673     060C  2D3E               	goto	l1307
  1674     060D                     u760:
  1675     060D                     l1359:
  1676                           
  1677                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1678     060D  083D               	movf	sprintf@sp,w
  1679     060E  0084               	movwf	4
  1680     060F  1383               	bcf	3,7	;select IRP bank0
  1681     0610  0180               	clrf	0
  1682     0611                     l273:
  1683     0611  0008               	return
  1684     0612                     __end_of_sprintf:
  1685                           
  1686                           	psect	text2
  1687     03EF                     __ptext2:	
  1688 ;; *************** function ___lwmod *****************
  1689 ;; Defined at:
  1690 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;  divisor         2    8[COMMON] unsigned int 
  1693 ;;  dividend        2   10[COMMON] unsigned int 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  counter         1   13[COMMON] unsigned char 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  2    8[COMMON] unsigned int 
  1698 ;; Registers used:
  1699 ;;		wreg, status,2, status,0
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1705 ;;      Params:         4       0       0       0       0
  1706 ;;      Locals:         1       0       0       0       0
  1707 ;;      Temps:          1       0       0       0       0
  1708 ;;      Totals:         6       0       0       0       0
  1709 ;;Total ram usage:        6 bytes
  1710 ;; Hardware stack levels used: 1
  1711 ;; This function calls:
  1712 ;;		Nothing
  1713 ;; This function is called by:
  1714 ;;		_sprintf
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718     03EF                     ___lwmod:	
  1719                           ;psect for function ___lwmod
  1720                           
  1721     03EF                     l1211:	
  1722                           ;incstack = 0
  1723                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1724                           
  1725     03EF  0878               	movf	___lwmod@divisor,w
  1726     03F0  0479               	iorwf	___lwmod@divisor+1,w
  1727     03F1  1903               	btfsc	3,2
  1728     03F2  2BF4               	goto	u591
  1729     03F3  2BF5               	goto	u590
  1730     03F4                     u591:
  1731     03F4  2C24               	goto	l1229
  1732     03F5                     u590:
  1733     03F5                     l1213:
  1734     03F5  01FD               	clrf	___lwmod@counter
  1735     03F6  0AFD               	incf	___lwmod@counter,f
  1736     03F7  2C03               	goto	l1219
  1737     03F8                     l1215:
  1738     03F8  3001               	movlw	1
  1739     03F9                     u605:
  1740     03F9  1003               	clrc
  1741     03FA  0DF8               	rlf	___lwmod@divisor,f
  1742     03FB  0DF9               	rlf	___lwmod@divisor+1,f
  1743     03FC  3EFF               	addlw	-1
  1744     03FD  1D03               	skipz
  1745     03FE  2BF9               	goto	u605
  1746     03FF                     l1217:
  1747     03FF  3001               	movlw	1
  1748     0400  00FC               	movwf	??___lwmod
  1749     0401  087C               	movf	??___lwmod,w
  1750     0402  07FD               	addwf	___lwmod@counter,f
  1751     0403                     l1219:
  1752     0403  1FF9               	btfss	___lwmod@divisor+1,7
  1753     0404  2C06               	goto	u611
  1754     0405  2C07               	goto	u610
  1755     0406                     u611:
  1756     0406  2BF8               	goto	l1215
  1757     0407                     u610:
  1758     0407                     l1221:
  1759     0407  0879               	movf	___lwmod@divisor+1,w
  1760     0408  027B               	subwf	___lwmod@dividend+1,w
  1761     0409  1D03               	skipz
  1762     040A  2C0D               	goto	u625
  1763     040B  0878               	movf	___lwmod@divisor,w
  1764     040C  027A               	subwf	___lwmod@dividend,w
  1765     040D                     u625:
  1766     040D  1C03               	skipc
  1767     040E  2C10               	goto	u621
  1768     040F  2C11               	goto	u620
  1769     0410                     u621:
  1770     0410  2C17               	goto	l1225
  1771     0411                     u620:
  1772     0411                     l1223:
  1773     0411  0878               	movf	___lwmod@divisor,w
  1774     0412  02FA               	subwf	___lwmod@dividend,f
  1775     0413  0879               	movf	___lwmod@divisor+1,w
  1776     0414  1C03               	skipc
  1777     0415  03FB               	decf	___lwmod@dividend+1,f
  1778     0416  02FB               	subwf	___lwmod@dividend+1,f
  1779     0417                     l1225:
  1780     0417  3001               	movlw	1
  1781     0418                     u635:
  1782     0418  1003               	clrc
  1783     0419  0CF9               	rrf	___lwmod@divisor+1,f
  1784     041A  0CF8               	rrf	___lwmod@divisor,f
  1785     041B  3EFF               	addlw	-1
  1786     041C  1D03               	skipz
  1787     041D  2C18               	goto	u635
  1788     041E                     l1227:
  1789     041E  3001               	movlw	1
  1790     041F  02FD               	subwf	___lwmod@counter,f
  1791     0420  1D03               	btfss	3,2
  1792     0421  2C23               	goto	u641
  1793     0422  2C24               	goto	u640
  1794     0423                     u641:
  1795     0423  2C07               	goto	l1221
  1796     0424                     u640:
  1797     0424                     l1229:
  1798     0424  087B               	movf	___lwmod@dividend+1,w
  1799     0425  00F9               	movwf	?___lwmod+1
  1800     0426  087A               	movf	___lwmod@dividend,w
  1801     0427  00F8               	movwf	?___lwmod
  1802     0428                     l559:
  1803     0428  0008               	return
  1804     0429                     __end_of___lwmod:
  1805                           
  1806                           	psect	text3
  1807     04A9                     __ptext3:	
  1808 ;; *************** function ___lwdiv *****************
  1809 ;; Defined at:
  1810 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  divisor         2    0[COMMON] unsigned int 
  1813 ;;  dividend        2    2[COMMON] unsigned int 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  quotient        2    5[COMMON] unsigned int 
  1816 ;;  counter         1    7[COMMON] unsigned char 
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  2    0[COMMON] unsigned int 
  1819 ;; Registers used:
  1820 ;;		wreg, status,2, status,0
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1826 ;;      Params:         4       0       0       0       0
  1827 ;;      Locals:         3       0       0       0       0
  1828 ;;      Temps:          1       0       0       0       0
  1829 ;;      Totals:         8       0       0       0       0
  1830 ;;Total ram usage:        8 bytes
  1831 ;; Hardware stack levels used: 1
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_sprintf
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839     04A9                     ___lwdiv:	
  1840                           ;psect for function ___lwdiv
  1841                           
  1842     04A9                     l1185:	
  1843                           ;incstack = 0
  1844                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1845                           
  1846     04A9  01F5               	clrf	___lwdiv@quotient
  1847     04AA  01F6               	clrf	___lwdiv@quotient+1
  1848     04AB                     l1187:
  1849     04AB  0870               	movf	___lwdiv@divisor,w
  1850     04AC  0471               	iorwf	___lwdiv@divisor+1,w
  1851     04AD  1903               	btfsc	3,2
  1852     04AE  2CB0               	goto	u521
  1853     04AF  2CB1               	goto	u520
  1854     04B0                     u521:
  1855     04B0  2CE8               	goto	l1207
  1856     04B1                     u520:
  1857     04B1                     l1189:
  1858     04B1  01F7               	clrf	___lwdiv@counter
  1859     04B2  0AF7               	incf	___lwdiv@counter,f
  1860     04B3  2CBF               	goto	l1195
  1861     04B4                     l1191:
  1862     04B4  3001               	movlw	1
  1863     04B5                     u535:
  1864     04B5  1003               	clrc
  1865     04B6  0DF0               	rlf	___lwdiv@divisor,f
  1866     04B7  0DF1               	rlf	___lwdiv@divisor+1,f
  1867     04B8  3EFF               	addlw	-1
  1868     04B9  1D03               	skipz
  1869     04BA  2CB5               	goto	u535
  1870     04BB                     l1193:
  1871     04BB  3001               	movlw	1
  1872     04BC  00F4               	movwf	??___lwdiv
  1873     04BD  0874               	movf	??___lwdiv,w
  1874     04BE  07F7               	addwf	___lwdiv@counter,f
  1875     04BF                     l1195:
  1876     04BF  1FF1               	btfss	___lwdiv@divisor+1,7
  1877     04C0  2CC2               	goto	u541
  1878     04C1  2CC3               	goto	u540
  1879     04C2                     u541:
  1880     04C2  2CB4               	goto	l1191
  1881     04C3                     u540:
  1882     04C3                     l1197:
  1883     04C3  3001               	movlw	1
  1884     04C4                     u555:
  1885     04C4  1003               	clrc
  1886     04C5  0DF5               	rlf	___lwdiv@quotient,f
  1887     04C6  0DF6               	rlf	___lwdiv@quotient+1,f
  1888     04C7  3EFF               	addlw	-1
  1889     04C8  1D03               	skipz
  1890     04C9  2CC4               	goto	u555
  1891     04CA  0871               	movf	___lwdiv@divisor+1,w
  1892     04CB  0273               	subwf	___lwdiv@dividend+1,w
  1893     04CC  1D03               	skipz
  1894     04CD  2CD0               	goto	u565
  1895     04CE  0870               	movf	___lwdiv@divisor,w
  1896     04CF  0272               	subwf	___lwdiv@dividend,w
  1897     04D0                     u565:
  1898     04D0  1C03               	skipc
  1899     04D1  2CD3               	goto	u561
  1900     04D2  2CD4               	goto	u560
  1901     04D3                     u561:
  1902     04D3  2CDB               	goto	l1203
  1903     04D4                     u560:
  1904     04D4                     l1199:
  1905     04D4  0870               	movf	___lwdiv@divisor,w
  1906     04D5  02F2               	subwf	___lwdiv@dividend,f
  1907     04D6  0871               	movf	___lwdiv@divisor+1,w
  1908     04D7  1C03               	skipc
  1909     04D8  03F3               	decf	___lwdiv@dividend+1,f
  1910     04D9  02F3               	subwf	___lwdiv@dividend+1,f
  1911     04DA                     l1201:
  1912     04DA  1475               	bsf	___lwdiv@quotient,0
  1913     04DB                     l1203:
  1914     04DB  3001               	movlw	1
  1915     04DC                     u575:
  1916     04DC  1003               	clrc
  1917     04DD  0CF1               	rrf	___lwdiv@divisor+1,f
  1918     04DE  0CF0               	rrf	___lwdiv@divisor,f
  1919     04DF  3EFF               	addlw	-1
  1920     04E0  1D03               	skipz
  1921     04E1  2CDC               	goto	u575
  1922     04E2                     l1205:
  1923     04E2  3001               	movlw	1
  1924     04E3  02F7               	subwf	___lwdiv@counter,f
  1925     04E4  1D03               	btfss	3,2
  1926     04E5  2CE7               	goto	u581
  1927     04E6  2CE8               	goto	u580
  1928     04E7                     u581:
  1929     04E7  2CC3               	goto	l1197
  1930     04E8                     u580:
  1931     04E8                     l1207:
  1932     04E8  0876               	movf	___lwdiv@quotient+1,w
  1933     04E9  00F1               	movwf	?___lwdiv+1
  1934     04EA  0875               	movf	___lwdiv@quotient,w
  1935     04EB  00F0               	movwf	?___lwdiv
  1936     04EC                     l549:
  1937     04EC  0008               	return
  1938     04ED                     __end_of___lwdiv:
  1939                           
  1940                           	psect	text4
  1941     0343                     __ptext4:	
  1942 ;; *************** function _spiWrite *****************
  1943 ;; Defined at:
  1944 ;;		line 34 in file "SPI.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  dat             1    wreg     unsigned char 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  dat             1    0[COMMON] unsigned char 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		wreg
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1958 ;;      Params:         0       0       0       0       0
  1959 ;;      Locals:         1       0       0       0       0
  1960 ;;      Temps:          0       0       0       0       0
  1961 ;;      Totals:         1       0       0       0       0
  1962 ;;Total ram usage:        1 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; This function calls:
  1965 ;;		Nothing
  1966 ;; This function is called by:
  1967 ;;		_main
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971     0343                     _spiWrite:	
  1972                           ;psect for function _spiWrite
  1973                           
  1974                           
  1975                           ;incstack = 0
  1976                           ; Regs used in _spiWrite: [wreg]
  1977                           ;spiWrite@dat stored from wreg
  1978     0343  00F0               	movwf	spiWrite@dat
  1979     0344                     l1297:
  1980                           
  1981                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1982     0344  0870               	movf	spiWrite@dat,w
  1983     0345  1283               	bcf	3,5	;RP0=0, select bank0
  1984     0346  1303               	bcf	3,6	;RP1=0, select bank0
  1985     0347  0093               	movwf	19	;volatile
  1986     0348                     l100:
  1987     0348  0008               	return
  1988     0349                     __end_of_spiWrite:
  1989                           
  1990                           	psect	text5
  1991     035F                     __ptext5:	
  1992 ;; *************** function _spiRead *****************
  1993 ;; Defined at:
  1994 ;;		line 47 in file "SPI.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;		None
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;		None
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      unsigned char 
  2001 ;; Registers used:
  2002 ;;		wreg, status,2, status,0, pclath, cstack
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2008 ;;      Params:         0       0       0       0       0
  2009 ;;      Locals:         0       0       0       0       0
  2010 ;;      Temps:          0       0       0       0       0
  2011 ;;      Totals:         0       0       0       0       0
  2012 ;;Total ram usage:        0 bytes
  2013 ;; Hardware stack levels used: 1
  2014 ;; Hardware stack levels required when called: 1
  2015 ;; This function calls:
  2016 ;;		_spiReceiveWait
  2017 ;; This function is called by:
  2018 ;;		_main
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022     035F                     _spiRead:	
  2023                           ;psect for function _spiRead
  2024                           
  2025     035F                     l1299:	
  2026                           ;incstack = 0
  2027                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  2028                           
  2029                           
  2030                           ;SPI.c: 49:     spiReceiveWait();
  2031     035F  120A  118A  2350  120A  118A  	fcall	_spiReceiveWait
  2032     0364                     l1301:
  2033                           
  2034                           ;SPI.c: 50:     return(SSPBUF);
  2035     0364  1283               	bcf	3,5	;RP0=0, select bank0
  2036     0365  1303               	bcf	3,6	;RP1=0, select bank0
  2037     0366  0813               	movf	19,w	;volatile
  2038     0367                     l108:
  2039     0367  0008               	return
  2040     0368                     __end_of_spiRead:
  2041                           
  2042                           	psect	text6
  2043     0350                     __ptext6:	
  2044 ;; *************** function _spiReceiveWait *****************
  2045 ;; Defined at:
  2046 ;;		line 29 in file "SPI.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;		None
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		None
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2060 ;;      Params:         0       0       0       0       0
  2061 ;;      Locals:         0       0       0       0       0
  2062 ;;      Temps:          0       0       0       0       0
  2063 ;;      Totals:         0       0       0       0       0
  2064 ;;Total ram usage:        0 bytes
  2065 ;; Hardware stack levels used: 1
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_spiRead
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073     0350                     _spiReceiveWait:	
  2074                           ;psect for function _spiReceiveWait
  2075                           
  2076     0350                     l1163:	
  2077                           ;incstack = 0
  2078                           ; Regs used in _spiReceiveWait: []
  2079                           
  2080     0350                     l94:	
  2081                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  2082                           
  2083     0350  1683               	bsf	3,5	;RP0=1, select bank1
  2084     0351  1303               	bcf	3,6	;RP1=0, select bank1
  2085     0352  1C14               	btfss	20,0	;volatile
  2086     0353  2B55               	goto	u511
  2087     0354  2B56               	goto	u510
  2088     0355                     u511:
  2089     0355  2B50               	goto	l94
  2090     0356                     u510:
  2091     0356                     l97:
  2092     0356  0008               	return
  2093     0357                     __end_of_spiReceiveWait:
  2094                           
  2095                           	psect	text7
  2096     03CE                     __ptext7:	
  2097 ;; *************** function _setup *****************
  2098 ;; Defined at:
  2099 ;;		line 43 in file "Principal.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;		None
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;		None
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0, pclath, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2113 ;;      Params:         0       0       0       0       0
  2114 ;;      Locals:         0       0       0       0       0
  2115 ;;      Temps:          0       0       0       0       0
  2116 ;;      Totals:         0       0       0       0       0
  2117 ;;Total ram usage:        0 bytes
  2118 ;; Hardware stack levels used: 1
  2119 ;; Hardware stack levels required when called: 1
  2120 ;; This function calls:
  2121 ;;		_spiInit
  2122 ;; This function is called by:
  2123 ;;		_main
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127     03CE                     _setup:	
  2128                           ;psect for function _setup
  2129                           
  2130     03CE                     l1233:	
  2131                           ;incstack = 0
  2132                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2133                           
  2134                           
  2135                           ;Principal.c: 45:     OSCCON = 0B01110001;
  2136     03CE  3071               	movlw	113
  2137     03CF  1683               	bsf	3,5	;RP0=1, select bank1
  2138     03D0  1303               	bcf	3,6	;RP1=0, select bank1
  2139     03D1  008F               	movwf	15	;volatile
  2140     03D2                     l1235:
  2141                           
  2142                           ;Principal.c: 48:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDL
      +                          E_LOW, SPI_IDLE_2_ACTIVE);
  2143     03D2  01F0               	clrf	spiInit@sDataSample
  2144     03D3  01F1               	clrf	spiInit@sClockIdle
  2145     03D4  01F2               	clrf	spiInit@sTransmitEdge
  2146     03D5  3020               	movlw	32
  2147     03D6  120A  118A  237E  120A  118A  	fcall	_spiInit
  2148     03DB                     l1237:
  2149                           
  2150                           ;Principal.c: 51:     ANSEL = 0;
  2151     03DB  1683               	bsf	3,5	;RP0=1, select bank3
  2152     03DC  1703               	bsf	3,6	;RP1=1, select bank3
  2153     03DD  0188               	clrf	8	;volatile
  2154     03DE                     l1239:
  2155                           
  2156                           ;Principal.c: 52:     ANSELH = 0;
  2157     03DE  0189               	clrf	9	;volatile
  2158     03DF                     l1241:
  2159                           
  2160                           ;Principal.c: 53:     TRISA = 0;
  2161     03DF  1683               	bsf	3,5	;RP0=1, select bank1
  2162     03E0  1303               	bcf	3,6	;RP1=0, select bank1
  2163     03E1  0185               	clrf	5	;volatile
  2164     03E2                     l1243:
  2165                           
  2166                           ;Principal.c: 54:     TRISB = 0;
  2167     03E2  0186               	clrf	6	;volatile
  2168     03E3                     l1245:
  2169                           
  2170                           ;Principal.c: 55:     TRISCbits.TRISC2 = 0;
  2171     03E3  1107               	bcf	7,2	;volatile
  2172     03E4                     l1247:
  2173                           
  2174                           ;Principal.c: 56:     TRISCbits.TRISC1 = 0;
  2175     03E4  1087               	bcf	7,1	;volatile
  2176     03E5                     l1249:
  2177                           
  2178                           ;Principal.c: 57:     TRISD = 0;
  2179     03E5  0188               	clrf	8	;volatile
  2180     03E6                     l1251:
  2181                           
  2182                           ;Principal.c: 60:     PORTA = 0;
  2183     03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2184     03E7  1303               	bcf	3,6	;RP1=0, select bank0
  2185     03E8  0185               	clrf	5	;volatile
  2186     03E9                     l1253:
  2187                           
  2188                           ;Principal.c: 61:     PORTB = 0;
  2189     03E9  0186               	clrf	6	;volatile
  2190     03EA                     l1255:
  2191                           
  2192                           ;Principal.c: 62:     PORTCbits.RC2 = 1;
  2193     03EA  1507               	bsf	7,2	;volatile
  2194     03EB                     l1257:
  2195                           
  2196                           ;Principal.c: 63:     PORTCbits.RC1 = 1;
  2197     03EB  1487               	bsf	7,1	;volatile
  2198     03EC                     l1259:
  2199                           
  2200                           ;Principal.c: 64:     PORTD = 0;
  2201     03EC  0188               	clrf	8	;volatile
  2202     03ED                     l1261:
  2203                           
  2204                           ;Principal.c: 65:     PORTE = 0;
  2205     03ED  0189               	clrf	9	;volatile
  2206     03EE                     l57:
  2207     03EE  0008               	return
  2208     03EF                     __end_of_setup:
  2209                           
  2210                           	psect	text8
  2211     037E                     __ptext8:	
  2212 ;; *************** function _spiInit *****************
  2213 ;; Defined at:
  2214 ;;		line 12 in file "SPI.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;  sType           1    wreg     enum E1292
  2217 ;;  sDataSample     1    0[COMMON] enum E1300
  2218 ;;  sClockIdle      1    1[COMMON] enum E1304
  2219 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;  sType           1    3[COMMON] enum E1292
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2, status,0
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2231 ;;      Params:         3       0       0       0       0
  2232 ;;      Locals:         1       0       0       0       0
  2233 ;;      Temps:          0       0       0       0       0
  2234 ;;      Totals:         4       0       0       0       0
  2235 ;;Total ram usage:        4 bytes
  2236 ;; Hardware stack levels used: 1
  2237 ;; This function calls:
  2238 ;;		Nothing
  2239 ;; This function is called by:
  2240 ;;		_setup
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244     037E                     _spiInit:	
  2245                           ;psect for function _spiInit
  2246                           
  2247                           
  2248                           ;incstack = 0
  2249                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2250                           ;spiInit@sType stored from wreg
  2251     037E  00F3               	movwf	spiInit@sType
  2252     037F                     l1153:
  2253                           
  2254                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  2255     037F  1683               	bsf	3,5	;RP0=1, select bank1
  2256     0380  1303               	bcf	3,6	;RP1=0, select bank1
  2257     0381  1287               	bcf	7,5	;volatile
  2258                           
  2259                           ;SPI.c: 15:     if(sType & 0b00000100)
  2260     0382  1D73               	btfss	spiInit@sType,2
  2261     0383  2B85               	goto	u501
  2262     0384  2B86               	goto	u500
  2263     0385                     u501:
  2264     0385  2B8A               	goto	l1159
  2265     0386                     u500:
  2266     0386                     l1155:
  2267                           
  2268                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  2269     0386  0872               	movf	spiInit@sTransmitEdge,w
  2270     0387  0094               	movwf	20	;volatile
  2271     0388                     l1157:
  2272                           
  2273                           ;SPI.c: 18:         TRISC3 = 1;
  2274     0388  1587               	bsf	7,3	;volatile
  2275                           
  2276                           ;SPI.c: 19:     }
  2277     0389  2B8E               	goto	l90
  2278     038A                     l1159:
  2279                           
  2280                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  2281     038A  0870               	movf	spiInit@sDataSample,w
  2282     038B  0472               	iorwf	spiInit@sTransmitEdge,w
  2283     038C  0094               	movwf	20	;volatile
  2284     038D                     l1161:
  2285                           
  2286                           ;SPI.c: 23:         TRISC3 = 0;
  2287     038D  1187               	bcf	7,3	;volatile
  2288     038E                     l90:	
  2289                           ;SPI.c: 24:     }
  2290                           
  2291                           
  2292                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  2293     038E  0873               	movf	spiInit@sType,w
  2294     038F  0471               	iorwf	spiInit@sClockIdle,w
  2295     0390  1283               	bcf	3,5	;RP0=0, select bank0
  2296     0391  1303               	bcf	3,6	;RP1=0, select bank0
  2297     0392  0094               	movwf	20	;volatile
  2298     0393                     l91:
  2299     0393  0008               	return
  2300     0394                     __end_of_spiInit:
  2301                           
  2302                           	psect	text9
  2303     0467                     __ptext9:	
  2304 ;; *************** function _Lcd_Write_String *****************
  2305 ;; Defined at:
  2306 ;;		line 118 in file "LCD.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  a               2    3[COMMON] PTR unsigned char 
  2309 ;;		 -> cCONT(4), cPOT2(4), cPOT1(4), STR_3(5), 
  2310 ;;		 -> STR_2(5), STR_1(5), 
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;  i               2    8[COMMON] int 
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  1    wreg      void 
  2315 ;; Registers used:
  2316 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2322 ;;      Params:         2       0       0       0       0
  2323 ;;      Locals:         2       0       0       0       0
  2324 ;;      Temps:          3       0       0       0       0
  2325 ;;      Totals:         7       0       0       0       0
  2326 ;;Total ram usage:        7 bytes
  2327 ;; Hardware stack levels used: 1
  2328 ;; Hardware stack levels required when called: 2
  2329 ;; This function calls:
  2330 ;;		_Lcd_Write_Char
  2331 ;; This function is called by:
  2332 ;;		_main
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336     0467                     _Lcd_Write_String:	
  2337                           ;psect for function _Lcd_Write_String
  2338                           
  2339     0467                     l1289:	
  2340                           ;incstack = 0
  2341                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2342                           
  2343                           
  2344                           ;LCD.c: 119:     int i;;LCD.c: 120:     for (i = 0; a[i] != '\0'; i++)
  2345     0467  01F8               	clrf	Lcd_Write_String@i
  2346     0468  01F9               	clrf	Lcd_Write_String@i+1
  2347     0469  2C8C               	goto	l1295
  2348     046A                     l1291:
  2349                           
  2350                           ;LCD.c: 121:         Lcd_Write_Char(a[i]);
  2351     046A  0878               	movf	Lcd_Write_String@i,w
  2352     046B  0773               	addwf	Lcd_Write_String@a,w
  2353     046C  00F6               	movwf	??_Lcd_Write_String+1
  2354     046D  0874               	movf	Lcd_Write_String@a+1,w
  2355     046E  00F5               	movwf	??_Lcd_Write_String
  2356     046F  1803               	skipnc
  2357     0470  0AF5               	incf	??_Lcd_Write_String,f
  2358     0471  1FF8               	btfss	Lcd_Write_String@i,7
  2359     0472  2C74               	goto	u670
  2360     0473  03F5               	decf	??_Lcd_Write_String,f
  2361     0474                     u670:
  2362     0474  0875               	movf	??_Lcd_Write_String,w
  2363     0475  00F7               	movwf	??_Lcd_Write_String+2
  2364     0476  0877               	movf	??_Lcd_Write_String+2,w
  2365     0477  1283               	bcf	3,5	;RP0=0, select bank0
  2366     0478  1303               	bcf	3,6	;RP1=0, select bank0
  2367     0479  00FF               	movwf	btemp+1
  2368     047A  0876               	movf	??_Lcd_Write_String+1,w
  2369     047B  0084               	movwf	4
  2370     047C  120A  118A  2003  120A  118A  	fcall	stringtab
  2371     0481  120A  118A  2368  120A  118A  	fcall	_Lcd_Write_Char
  2372     0486                     l1293:
  2373     0486  3001               	movlw	1
  2374     0487  07F8               	addwf	Lcd_Write_String@i,f
  2375     0488  1803               	skipnc
  2376     0489  0AF9               	incf	Lcd_Write_String@i+1,f
  2377     048A  3000               	movlw	0
  2378     048B  07F9               	addwf	Lcd_Write_String@i+1,f
  2379     048C                     l1295:
  2380     048C  0878               	movf	Lcd_Write_String@i,w
  2381     048D  0773               	addwf	Lcd_Write_String@a,w
  2382     048E  00F6               	movwf	??_Lcd_Write_String+1
  2383     048F  0874               	movf	Lcd_Write_String@a+1,w
  2384     0490  00F5               	movwf	??_Lcd_Write_String
  2385     0491  1803               	skipnc
  2386     0492  0AF5               	incf	??_Lcd_Write_String,f
  2387     0493  1FF8               	btfss	Lcd_Write_String@i,7
  2388     0494  2C96               	goto	u680
  2389     0495  03F5               	decf	??_Lcd_Write_String,f
  2390     0496                     u680:
  2391     0496  0875               	movf	??_Lcd_Write_String,w
  2392     0497  00F7               	movwf	??_Lcd_Write_String+2
  2393     0498  0877               	movf	??_Lcd_Write_String+2,w
  2394     0499  1283               	bcf	3,5	;RP0=0, select bank0
  2395     049A  1303               	bcf	3,6	;RP1=0, select bank0
  2396     049B  00FF               	movwf	btemp+1
  2397     049C  0876               	movf	??_Lcd_Write_String+1,w
  2398     049D  0084               	movwf	4
  2399     049E  120A  118A  2003  120A  118A  	fcall	stringtab
  2400     04A3  3A00               	xorlw	0
  2401     04A4  1D03               	skipz
  2402     04A5  2CA7               	goto	u691
  2403     04A6  2CA8               	goto	u690
  2404     04A7                     u691:
  2405     04A7  2C6A               	goto	l1291
  2406     04A8                     u690:
  2407     04A8                     l157:
  2408     04A8  0008               	return
  2409     04A9                     __end_of_Lcd_Write_String:
  2410                           
  2411                           	psect	text10
  2412     0368                     __ptext10:	
  2413 ;; *************** function _Lcd_Write_Char *****************
  2414 ;; Defined at:
  2415 ;;		line 110 in file "LCD.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  a               1    wreg     unsigned char 
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;  a               1    2[COMMON] unsigned char 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  1    wreg      void 
  2422 ;; Registers used:
  2423 ;;		wreg, status,2, status,0, pclath, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2429 ;;      Params:         0       0       0       0       0
  2430 ;;      Locals:         1       0       0       0       0
  2431 ;;      Temps:          1       0       0       0       0
  2432 ;;      Totals:         2       0       0       0       0
  2433 ;;Total ram usage:        2 bytes
  2434 ;; Hardware stack levels used: 1
  2435 ;; Hardware stack levels required when called: 1
  2436 ;; This function calls:
  2437 ;;		_Lcd_Port
  2438 ;; This function is called by:
  2439 ;;		_Lcd_Write_String
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443     0368                     _Lcd_Write_Char:	
  2444                           ;psect for function _Lcd_Write_Char
  2445                           
  2446                           
  2447                           ;incstack = 0
  2448                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2449                           ;Lcd_Write_Char@a stored from wreg
  2450     0368  00F2               	movwf	Lcd_Write_Char@a
  2451     0369                     l1175:
  2452                           
  2453                           ;LCD.c: 111:     PORTDbits.RD6 = 1;
  2454     0369  1283               	bcf	3,5	;RP0=0, select bank0
  2455     036A  1303               	bcf	3,6	;RP1=0, select bank0
  2456     036B  1708               	bsf	8,6	;volatile
  2457     036C                     l1177:
  2458                           
  2459                           ;LCD.c: 112:     Lcd_Port(a);
  2460     036C  0872               	movf	Lcd_Write_Char@a,w
  2461     036D  120A  118A  2429  120A  118A  	fcall	_Lcd_Port
  2462     0372                     l1179:
  2463                           
  2464                           ;LCD.c: 113:     PORTDbits.RD7 = 1;
  2465     0372  1283               	bcf	3,5	;RP0=0, select bank0
  2466     0373  1303               	bcf	3,6	;RP1=0, select bank0
  2467     0374  1788               	bsf	8,7	;volatile
  2468     0375                     l1181:
  2469                           
  2470                           ;LCD.c: 114:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2471     0375  301A               	movlw	26
  2472     0376  00F1               	movwf	??_Lcd_Write_Char
  2473     0377                     u927:
  2474     0377  0BF1               	decfsz	??_Lcd_Write_Char,f
  2475     0378  2B77               	goto	u927
  2476     0379  0000               	nop
  2477     037A                     l1183:
  2478                           
  2479                           ;LCD.c: 115:     PORTDbits.RD7 = 0;
  2480     037A  1283               	bcf	3,5	;RP0=0, select bank0
  2481     037B  1303               	bcf	3,6	;RP1=0, select bank0
  2482     037C  1388               	bcf	8,7	;volatile
  2483     037D                     l151:
  2484     037D  0008               	return
  2485     037E                     __end_of_Lcd_Write_Char:
  2486                           
  2487                           	psect	text11
  2488     03AE                     __ptext11:	
  2489 ;; *************** function _Lcd_Set_Cursor *****************
  2490 ;; Defined at:
  2491 ;;		line 71 in file "LCD.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;  a               1    wreg     unsigned char 
  2494 ;;  b               1    4[COMMON] unsigned char 
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;  a               1    5[COMMON] unsigned char 
  2497 ;;  temp            1    6[COMMON] unsigned char 
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      void 
  2500 ;; Registers used:
  2501 ;;		wreg, status,2, status,0, pclath, cstack
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2507 ;;      Params:         1       0       0       0       0
  2508 ;;      Locals:         2       0       0       0       0
  2509 ;;      Temps:          0       0       0       0       0
  2510 ;;      Totals:         3       0       0       0       0
  2511 ;;Total ram usage:        3 bytes
  2512 ;; Hardware stack levels used: 1
  2513 ;; Hardware stack levels required when called: 2
  2514 ;; This function calls:
  2515 ;;		_Lcd_Cmd
  2516 ;; This function is called by:
  2517 ;;		_main
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521     03AE                     _Lcd_Set_Cursor:	
  2522                           ;psect for function _Lcd_Set_Cursor
  2523                           
  2524                           
  2525                           ;incstack = 0
  2526                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2527                           ;Lcd_Set_Cursor@a stored from wreg
  2528     03AE  00F5               	movwf	Lcd_Set_Cursor@a
  2529     03AF                     l1277:
  2530                           
  2531                           ;LCD.c: 72:     char temp;;LCD.c: 73:     if (a == 1) {
  2532     03AF  0375               	decf	Lcd_Set_Cursor@a,w
  2533     03B0  1D03               	btfss	3,2
  2534     03B1  2BB3               	goto	u651
  2535     03B2  2BB4               	goto	u650
  2536     03B3                     u651:
  2537     03B3  2BBE               	goto	l1283
  2538     03B4                     u650:
  2539     03B4                     l1279:
  2540                           
  2541                           ;LCD.c: 74:         temp = 0x80 + b - 1;
  2542     03B4  0874               	movf	Lcd_Set_Cursor@b,w
  2543     03B5  3E7F               	addlw	127
  2544     03B6  00F6               	movwf	Lcd_Set_Cursor@temp
  2545     03B7                     l1281:
  2546                           
  2547                           ;LCD.c: 75:         Lcd_Cmd(temp);
  2548     03B7  0876               	movf	Lcd_Set_Cursor@temp,w
  2549     03B8  120A  118A  2394  120A  118A  	fcall	_Lcd_Cmd
  2550                           
  2551                           ;LCD.c: 76:     } else if (a == 2) {
  2552     03BD  2BCD               	goto	l145
  2553     03BE                     l1283:
  2554     03BE  3002               	movlw	2
  2555     03BF  0675               	xorwf	Lcd_Set_Cursor@a,w
  2556     03C0  1D03               	btfss	3,2
  2557     03C1  2BC3               	goto	u661
  2558     03C2  2BC4               	goto	u660
  2559     03C3                     u661:
  2560     03C3  2BCD               	goto	l145
  2561     03C4                     u660:
  2562     03C4                     l1285:
  2563                           
  2564                           ;LCD.c: 77:         temp = 0xC0 + b - 1;
  2565     03C4  0874               	movf	Lcd_Set_Cursor@b,w
  2566     03C5  3EBF               	addlw	191
  2567     03C6  00F6               	movwf	Lcd_Set_Cursor@temp
  2568     03C7                     l1287:
  2569                           
  2570                           ;LCD.c: 78:         Lcd_Cmd(temp);
  2571     03C7  0876               	movf	Lcd_Set_Cursor@temp,w
  2572     03C8  120A  118A  2394  120A  118A  	fcall	_Lcd_Cmd
  2573     03CD                     l145:
  2574     03CD  0008               	return
  2575     03CE                     __end_of_Lcd_Set_Cursor:
  2576                           
  2577                           	psect	text12
  2578     04ED                     __ptext12:	
  2579 ;; *************** function _Lcd_Init *****************
  2580 ;; Defined at:
  2581 ;;		line 82 in file "LCD.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;		None
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;		None
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  1    wreg      void 
  2588 ;; Registers used:
  2589 ;;		wreg, status,2, status,0, pclath, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2595 ;;      Params:         0       0       0       0       0
  2596 ;;      Locals:         0       0       0       0       0
  2597 ;;      Temps:          2       0       0       0       0
  2598 ;;      Totals:         2       0       0       0       0
  2599 ;;Total ram usage:        2 bytes
  2600 ;; Hardware stack levels used: 1
  2601 ;; Hardware stack levels required when called: 2
  2602 ;; This function calls:
  2603 ;;		_Lcd_Cmd
  2604 ;;		_Lcd_Port
  2605 ;; This function is called by:
  2606 ;;		_main
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610     04ED                     _Lcd_Init:	
  2611                           ;psect for function _Lcd_Init
  2612                           
  2613     04ED                     l1265:	
  2614                           ;incstack = 0
  2615                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2616                           
  2617                           
  2618                           ;LCD.c: 83:     Lcd_Port(0x00);
  2619     04ED  3000               	movlw	0
  2620     04EE  120A  118A  2429  120A  118A  	fcall	_Lcd_Port
  2621     04F3                     l1267:
  2622                           
  2623                           ;LCD.c: 84:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2624     04F3  3034               	movlw	52
  2625     04F4  00F5               	movwf	??_Lcd_Init+1
  2626     04F5  30F1               	movlw	241
  2627     04F6  00F4               	movwf	??_Lcd_Init
  2628     04F7                     u937:
  2629     04F7  0BF4               	decfsz	??_Lcd_Init,f
  2630     04F8  2CF7               	goto	u937
  2631     04F9  0BF5               	decfsz	??_Lcd_Init+1,f
  2632     04FA  2CF7               	goto	u937
  2633     04FB  2CFC               	nop2
  2634     04FC                     l1269:
  2635                           
  2636                           ;LCD.c: 85:     Lcd_Cmd(0x03);
  2637     04FC  3003               	movlw	3
  2638     04FD  120A  118A  2394  120A  118A  	fcall	_Lcd_Cmd
  2639                           
  2640                           ;LCD.c: 86:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2641     0502  300D               	movlw	13
  2642     0503  00F5               	movwf	??_Lcd_Init+1
  2643     0504  30FB               	movlw	251
  2644     0505  00F4               	movwf	??_Lcd_Init
  2645     0506                     u947:
  2646     0506  0BF4               	decfsz	??_Lcd_Init,f
  2647     0507  2D06               	goto	u947
  2648     0508  0BF5               	decfsz	??_Lcd_Init+1,f
  2649     0509  2D06               	goto	u947
  2650     050A  2D0B               	nop2
  2651     050B                     l1271:
  2652                           
  2653                           ;LCD.c: 87:     Lcd_Cmd(0x03);
  2654     050B  3003               	movlw	3
  2655     050C  120A  118A  2394  120A  118A  	fcall	_Lcd_Cmd
  2656     0511                     l1273:
  2657                           
  2658                           ;LCD.c: 88:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2659     0511  301D               	movlw	29
  2660     0512  00F5               	movwf	??_Lcd_Init+1
  2661     0513  3091               	movlw	145
  2662     0514  00F4               	movwf	??_Lcd_Init
  2663     0515                     u957:
  2664     0515  0BF4               	decfsz	??_Lcd_Init,f
  2665     0516  2D15               	goto	u957
  2666     0517  0BF5               	decfsz	??_Lcd_Init+1,f
  2667     0518  2D15               	goto	u957
  2668                           
  2669                           ;LCD.c: 89:     Lcd_Cmd(0x03);
  2670     0519  3003               	movlw	3
  2671     051A  120A  118A  2394  120A  118A  	fcall	_Lcd_Cmd
  2672                           
  2673                           ;LCD.c: 93:     Lcd_Cmd(0b00111000);
  2674     051F  3038               	movlw	56
  2675     0520  120A  118A  2394  120A  118A  	fcall	_Lcd_Cmd
  2676                           
  2677                           ;LCD.c: 94:     Lcd_Cmd(0b00001100);
  2678     0525  300C               	movlw	12
  2679     0526  120A  118A  2394  120A  118A  	fcall	_Lcd_Cmd
  2680                           
  2681                           ;LCD.c: 95:     Lcd_Cmd(0b00000001);
  2682     052B  3001               	movlw	1
  2683     052C  120A  118A  2394  120A  118A  	fcall	_Lcd_Cmd
  2684                           
  2685                           ;LCD.c: 96:     Lcd_Cmd(0b00000110);
  2686     0531  3006               	movlw	6
  2687     0532  120A  118A  2394  120A  118A  	fcall	_Lcd_Cmd
  2688     0537                     l148:
  2689     0537  0008               	return
  2690     0538                     __end_of_Lcd_Init:
  2691                           
  2692                           	psect	text13
  2693     0349                     __ptext13:	
  2694 ;; *************** function _Lcd_Clear *****************
  2695 ;; Defined at:
  2696 ;;		line 67 in file "LCD.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;		None
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  1    wreg      void 
  2703 ;; Registers used:
  2704 ;;		wreg, status,2, status,0, pclath, cstack
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2710 ;;      Params:         0       0       0       0       0
  2711 ;;      Locals:         0       0       0       0       0
  2712 ;;      Temps:          0       0       0       0       0
  2713 ;;      Totals:         0       0       0       0       0
  2714 ;;Total ram usage:        0 bytes
  2715 ;; Hardware stack levels used: 1
  2716 ;; Hardware stack levels required when called: 2
  2717 ;; This function calls:
  2718 ;;		_Lcd_Cmd
  2719 ;; This function is called by:
  2720 ;;		_main
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724     0349                     _Lcd_Clear:	
  2725                           ;psect for function _Lcd_Clear
  2726                           
  2727     0349                     l1275:	
  2728                           ;incstack = 0
  2729                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2730                           
  2731                           
  2732                           ;LCD.c: 68:     Lcd_Cmd(1);
  2733     0349  3001               	movlw	1
  2734     034A  120A  118A  2394  120A  118A  	fcall	_Lcd_Cmd
  2735     034F                     l139:
  2736     034F  0008               	return
  2737     0350                     __end_of_Lcd_Clear:
  2738                           
  2739                           	psect	text14
  2740     0394                     __ptext14:	
  2741 ;; *************** function _Lcd_Cmd *****************
  2742 ;; Defined at:
  2743 ;;		line 59 in file "LCD.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  a               1    wreg     unsigned char 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  a               1    3[COMMON] unsigned char 
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  1    wreg      void 
  2750 ;; Registers used:
  2751 ;;		wreg, status,2, status,0, pclath, cstack
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2757 ;;      Params:         0       0       0       0       0
  2758 ;;      Locals:         1       0       0       0       0
  2759 ;;      Temps:          2       0       0       0       0
  2760 ;;      Totals:         3       0       0       0       0
  2761 ;;Total ram usage:        3 bytes
  2762 ;; Hardware stack levels used: 1
  2763 ;; Hardware stack levels required when called: 1
  2764 ;; This function calls:
  2765 ;;		_Lcd_Port
  2766 ;; This function is called by:
  2767 ;;		_Lcd_Clear
  2768 ;;		_Lcd_Set_Cursor
  2769 ;;		_Lcd_Init
  2770 ;;		_Lcd_Shift_Right
  2771 ;;		_Lcd_Shift_Left
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775     0394                     _Lcd_Cmd:	
  2776                           ;psect for function _Lcd_Cmd
  2777                           
  2778                           
  2779                           ;incstack = 0
  2780                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2781                           ;Lcd_Cmd@a stored from wreg
  2782     0394  00F3               	movwf	Lcd_Cmd@a
  2783     0395                     l1165:
  2784                           
  2785                           ;LCD.c: 60:     PORTDbits.RD6 = 0;
  2786     0395  1283               	bcf	3,5	;RP0=0, select bank0
  2787     0396  1303               	bcf	3,6	;RP1=0, select bank0
  2788     0397  1308               	bcf	8,6	;volatile
  2789     0398                     l1167:
  2790                           
  2791                           ;LCD.c: 61:     Lcd_Port(a);
  2792     0398  0873               	movf	Lcd_Cmd@a,w
  2793     0399  120A  118A  2429  120A  118A  	fcall	_Lcd_Port
  2794     039E                     l1169:
  2795                           
  2796                           ;LCD.c: 62:     PORTDbits.RD7 = 1;
  2797     039E  1283               	bcf	3,5	;RP0=0, select bank0
  2798     039F  1303               	bcf	3,6	;RP1=0, select bank0
  2799     03A0  1788               	bsf	8,7	;volatile
  2800     03A1                     l1171:
  2801                           
  2802                           ;LCD.c: 63:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2803     03A1  300B               	movlw	11
  2804     03A2  00F2               	movwf	??_Lcd_Cmd+1
  2805     03A3  3062               	movlw	98
  2806     03A4  00F1               	movwf	??_Lcd_Cmd
  2807     03A5                     u967:
  2808     03A5  0BF1               	decfsz	??_Lcd_Cmd,f
  2809     03A6  2BA5               	goto	u967
  2810     03A7  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2811     03A8  2BA5               	goto	u967
  2812     03A9  0000               	nop
  2813     03AA                     l1173:
  2814                           
  2815                           ;LCD.c: 64:     PORTDbits.RD7 = 0;
  2816     03AA  1283               	bcf	3,5	;RP0=0, select bank0
  2817     03AB  1303               	bcf	3,6	;RP1=0, select bank0
  2818     03AC  1388               	bcf	8,7	;volatile
  2819     03AD                     l136:
  2820     03AD  0008               	return
  2821     03AE                     __end_of_Lcd_Cmd:
  2822                           
  2823                           	psect	text15
  2824     0429                     __ptext15:	
  2825 ;; *************** function _Lcd_Port *****************
  2826 ;; Defined at:
  2827 ;;		line 17 in file "LCD.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;  a               1    wreg     unsigned char 
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;  a               1    0[COMMON] unsigned char 
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  1    wreg      void 
  2834 ;; Registers used:
  2835 ;;		wreg
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2841 ;;      Params:         0       0       0       0       0
  2842 ;;      Locals:         1       0       0       0       0
  2843 ;;      Temps:          0       0       0       0       0
  2844 ;;      Totals:         1       0       0       0       0
  2845 ;;Total ram usage:        1 bytes
  2846 ;; Hardware stack levels used: 1
  2847 ;; This function calls:
  2848 ;;		Nothing
  2849 ;; This function is called by:
  2850 ;;		_Lcd_Cmd
  2851 ;;		_Lcd_Init
  2852 ;;		_Lcd_Write_Char
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856     0429                     _Lcd_Port:	
  2857                           ;psect for function _Lcd_Port
  2858                           
  2859                           
  2860                           ;incstack = 0
  2861                           ; Regs used in _Lcd_Port: [wreg]
  2862                           ;Lcd_Port@a stored from wreg
  2863     0429  00F0               	movwf	Lcd_Port@a
  2864     042A                     l1135:
  2865                           
  2866                           ;LCD.c: 18:     if (a & 0b00000001)
  2867     042A  1C70               	btfss	Lcd_Port@a,0
  2868     042B  2C2D               	goto	u421
  2869     042C  2C2E               	goto	u420
  2870     042D                     u421:
  2871     042D  2C32               	goto	l117
  2872     042E                     u420:
  2873     042E                     l1137:
  2874                           
  2875                           ;LCD.c: 19:         PORTBbits.RB0 = 1;
  2876     042E  1283               	bcf	3,5	;RP0=0, select bank0
  2877     042F  1303               	bcf	3,6	;RP1=0, select bank0
  2878     0430  1406               	bsf	6,0	;volatile
  2879     0431  2C35               	goto	l118
  2880     0432                     l117:	
  2881                           ;LCD.c: 20:     else
  2882                           
  2883                           
  2884                           ;LCD.c: 21:         PORTBbits.RB0 = 0;
  2885     0432  1283               	bcf	3,5	;RP0=0, select bank0
  2886     0433  1303               	bcf	3,6	;RP1=0, select bank0
  2887     0434  1006               	bcf	6,0	;volatile
  2888     0435                     l118:
  2889                           
  2890                           ;LCD.c: 23:     if (a & 0b00000010)
  2891     0435  1CF0               	btfss	Lcd_Port@a,1
  2892     0436  2C38               	goto	u431
  2893     0437  2C39               	goto	u430
  2894     0438                     u431:
  2895     0438  2C3B               	goto	l119
  2896     0439                     u430:
  2897     0439                     l1139:
  2898                           
  2899                           ;LCD.c: 24:         PORTBbits.RB1 = 1;
  2900     0439  1486               	bsf	6,1	;volatile
  2901     043A  2C3C               	goto	l120
  2902     043B                     l119:	
  2903                           ;LCD.c: 25:     else
  2904                           
  2905                           
  2906                           ;LCD.c: 26:         PORTBbits.RB1 = 0;
  2907     043B  1086               	bcf	6,1	;volatile
  2908     043C                     l120:
  2909                           
  2910                           ;LCD.c: 28:     if (a & 0b00000100)
  2911     043C  1D70               	btfss	Lcd_Port@a,2
  2912     043D  2C3F               	goto	u441
  2913     043E  2C40               	goto	u440
  2914     043F                     u441:
  2915     043F  2C42               	goto	l121
  2916     0440                     u440:
  2917     0440                     l1141:
  2918                           
  2919                           ;LCD.c: 29:         PORTBbits.RB2 = 1;
  2920     0440  1506               	bsf	6,2	;volatile
  2921     0441  2C43               	goto	l122
  2922     0442                     l121:	
  2923                           ;LCD.c: 30:     else
  2924                           
  2925                           
  2926                           ;LCD.c: 31:         PORTBbits.RB2 = 0;
  2927     0442  1106               	bcf	6,2	;volatile
  2928     0443                     l122:
  2929                           
  2930                           ;LCD.c: 33:     if (a & 0b00001000)
  2931     0443  1DF0               	btfss	Lcd_Port@a,3
  2932     0444  2C46               	goto	u451
  2933     0445  2C47               	goto	u450
  2934     0446                     u451:
  2935     0446  2C49               	goto	l123
  2936     0447                     u450:
  2937     0447                     l1143:
  2938                           
  2939                           ;LCD.c: 34:         PORTBbits.RB3 = 1;
  2940     0447  1586               	bsf	6,3	;volatile
  2941     0448  2C4A               	goto	l124
  2942     0449                     l123:	
  2943                           ;LCD.c: 35:     else
  2944                           
  2945                           
  2946                           ;LCD.c: 36:         PORTBbits.RB3 = 0;
  2947     0449  1186               	bcf	6,3	;volatile
  2948     044A                     l124:
  2949                           
  2950                           ;LCD.c: 38:     if (a & 0b00010000)
  2951     044A  1E70               	btfss	Lcd_Port@a,4
  2952     044B  2C4D               	goto	u461
  2953     044C  2C4E               	goto	u460
  2954     044D                     u461:
  2955     044D  2C50               	goto	l125
  2956     044E                     u460:
  2957     044E                     l1145:
  2958                           
  2959                           ;LCD.c: 39:         PORTBbits.RB4 = 1;
  2960     044E  1606               	bsf	6,4	;volatile
  2961     044F  2C51               	goto	l126
  2962     0450                     l125:	
  2963                           ;LCD.c: 40:     else
  2964                           
  2965                           
  2966                           ;LCD.c: 41:         PORTBbits.RB4 = 0;
  2967     0450  1206               	bcf	6,4	;volatile
  2968     0451                     l126:
  2969                           
  2970                           ;LCD.c: 43:     if (a & 0b00100000)
  2971     0451  1EF0               	btfss	Lcd_Port@a,5
  2972     0452  2C54               	goto	u471
  2973     0453  2C55               	goto	u470
  2974     0454                     u471:
  2975     0454  2C57               	goto	l127
  2976     0455                     u470:
  2977     0455                     l1147:
  2978                           
  2979                           ;LCD.c: 44:         PORTBbits.RB5 = 1;
  2980     0455  1686               	bsf	6,5	;volatile
  2981     0456  2C58               	goto	l128
  2982     0457                     l127:	
  2983                           ;LCD.c: 45:     else
  2984                           
  2985                           
  2986                           ;LCD.c: 46:         PORTBbits.RB5 = 0;
  2987     0457  1286               	bcf	6,5	;volatile
  2988     0458                     l128:
  2989                           
  2990                           ;LCD.c: 48:     if (a & 0b01000000)
  2991     0458  1F70               	btfss	Lcd_Port@a,6
  2992     0459  2C5B               	goto	u481
  2993     045A  2C5C               	goto	u480
  2994     045B                     u481:
  2995     045B  2C5E               	goto	l129
  2996     045C                     u480:
  2997     045C                     l1149:
  2998                           
  2999                           ;LCD.c: 49:         PORTBbits.RB6 = 1;
  3000     045C  1706               	bsf	6,6	;volatile
  3001     045D  2C5F               	goto	l130
  3002     045E                     l129:	
  3003                           ;LCD.c: 50:     else
  3004                           
  3005                           
  3006                           ;LCD.c: 51:         PORTBbits.RB6 = 0;
  3007     045E  1306               	bcf	6,6	;volatile
  3008     045F                     l130:
  3009                           
  3010                           ;LCD.c: 53:     if (a & 0b10000000)
  3011     045F  1FF0               	btfss	Lcd_Port@a,7
  3012     0460  2C62               	goto	u491
  3013     0461  2C63               	goto	u490
  3014     0462                     u491:
  3015     0462  2C65               	goto	l131
  3016     0463                     u490:
  3017     0463                     l1151:
  3018                           
  3019                           ;LCD.c: 54:         PORTBbits.RB7 = 1;
  3020     0463  1786               	bsf	6,7	;volatile
  3021     0464  2C66               	goto	l133
  3022     0465                     l131:	
  3023                           ;LCD.c: 55:     else
  3024                           
  3025                           
  3026                           ;LCD.c: 56:         PORTBbits.RB7 = 0;
  3027     0465  1386               	bcf	6,7	;volatile
  3028     0466                     l133:
  3029     0466  0008               	return
  3030     0467                     __end_of_Lcd_Port:
  3031     007E                     btemp	set	126	;btemp
  3032     007E                     wtemp0	set	126
  3033                           
  3034                           	psect	idloc
  3035                           
  3036                           ;Config register IDLOC0 @ 0x2000
  3037                           ;	unspecified, using default values
  3038     2000                     	org	8192
  3039     2000  3FFF               	dw	16383
  3040                           
  3041                           ;Config register IDLOC1 @ 0x2001
  3042                           ;	unspecified, using default values
  3043     2001                     	org	8193
  3044     2001  3FFF               	dw	16383
  3045                           
  3046                           ;Config register IDLOC2 @ 0x2002
  3047                           ;	unspecified, using default values
  3048     2002                     	org	8194
  3049     2002  3FFF               	dw	16383
  3050                           
  3051                           ;Config register IDLOC3 @ 0x2003
  3052                           ;	unspecified, using default values
  3053     2003                     	org	8195
  3054     2003  3FFF               	dw	16383
  3055                           
  3056                           	psect	config
  3057                           
  3058                           ;Config register CONFIG1 @ 0x2007
  3059                           ;	Oscillator Selection bits
  3060                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  3061                           ;	Watchdog Timer Enable bit
  3062                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3063                           ;	Power-up Timer Enable bit
  3064                           ;	PWRTE = OFF, PWRT disabled
  3065                           ;	RE3/MCLR pin function select bit
  3066                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3067                           ;	Code Protection bit
  3068                           ;	CP = OFF, Program memory code protection is disabled
  3069                           ;	Data Code Protection bit
  3070                           ;	CPD = OFF, Data memory code protection is disabled
  3071                           ;	Brown Out Reset Selection bits
  3072                           ;	BOREN = OFF, BOR disabled
  3073                           ;	Internal External Switchover bit
  3074                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3075                           ;	Fail-Safe Clock Monitor Enabled bit
  3076                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3077                           ;	Low Voltage Programming Enable bit
  3078                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3079                           ;	In-Circuit Debugger Mode bit
  3080                           ;	DEBUG = 0x1, unprogrammed default
  3081     2007                     	org	8199
  3082     2007  20D6               	dw	8406
  3083                           
  3084                           ;Config register CONFIG2 @ 0x2008
  3085                           ;	Brown-out Reset Selection bit
  3086                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3087                           ;	Flash Program Memory Self Write Enable bits
  3088                           ;	WRT = OFF, Write protection off
  3089     2008                     	org	8200
  3090     2008  3FFF               	dw	16383

Data Sizes:
    Strings     18
    Constant    10
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     16      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> cCONT(BANK0[4]), cPOT2(BANK0[4]), cPOT1(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 5
		 -> cCONT(BANK0[4]), cPOT2(BANK0[4]), cPOT1(BANK0[4]), STR_3(CODE[5]), 
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_spiInit
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3915
                                             13 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1429
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     744
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     198
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       3     2      1     788
                                              4 COMMON     3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     374
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     198
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      30       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      22       5       42.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      30      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Aug 02 22:36:29 2023

                       pc 0002               _SSPSTATbits 0094                        l57 03EE  
                      l90 038E                        l91 0393                        l94 0350  
                      l97 0356                        fsr 0004                       l100 0348  
                     l120 043C                       l121 0442                       l130 045F  
                     l122 0443                       l131 0465                       l123 0449  
                     l124 044A                       l108 0367                       l133 0466  
                     l125 0450                       l117 0432                       l126 0451  
                     l118 0435                       l127 0457                       l119 043B  
                     l151 037D                       l128 0458                       l136 03AD  
                     l129 045E                       l145 03CD                       l139 034F  
                     l148 0537                       l157 04A8                       l273 0611  
                     l549 04EC                       l559 0428                       u420 042E  
                     u500 0386                       u421 042D                       u501 0385  
                     u430 0439                       u510 0356                       u431 0438  
                     u511 0355                       u440 0440                       u520 04B1  
                     u441 043F                       u521 04B0                       u450 0447  
                     u610 0407                       u451 0446                       u611 0406  
                     u460 044E                       u540 04C3                       u620 0411  
                     u700 0544                       u461 044D                       u541 04C2  
                     u621 0410                       u605 03F9                       u701 0543  
                     u470 0455                       u710 057C                       u471 0454  
                     u535 04B5                       u711 057B                       u480 045C  
                     u560 04D4                       u640 0424                       u720 05A2  
                     u800 0790                       u481 045B                       u561 04D3  
                     u641 0423                       u625 040D                       u721 05A1  
                     u801 078F                       u490 0463                       u650 03B4  
                     u730 05AD                       u810 07C6                       u491 0462  
                     u651 03B3                       u555 04C4                       u635 0418  
                     u731 05AC                       u811 07C5                       u660 03C4  
                     u580 04E8                       u740 05B3                       u820 07DE  
                     u661 03C3                       u581 04E7                       u565 04D0  
                     u741 05B2                       u725 059E                       u821 07DD  
                     u805 078C                       u670 0474                       u590 03F5  
                     u750 05FD                       u575 04DC                       u591 03F4  
                     u751 05FC                       u815 07C2                       u680 0496  
                     u760 060D                       u761 060C                       u825 07DA  
                     u690 04A8                       u770 072A                       u691 04A7  
                     u771 0729                       u907 06F0                       u780 0742  
                     u781 0741                       u917 06FF                       u837 065D  
                     u790 0778                       u927 0377                       u791 0777  
                     u775 0726                       u847 067A                       u937 04F7  
                     u785 073E                       u857 0689                       u947 0506  
                     u795 0774                       u867 0698                       u957 0515  
                     u877 06B5                       u967 03A5                       u887 06C4  
                     u897 06D3                       fsr0 0004                       indf 0000  
                    l1201 04DA                      l1203 04DB                      l1211 03EF  
                    l1141 0440                      l1301 0364                      l1205 04E2  
                    l1221 0407                      l1213 03F5                      l1151 0463  
                    l1143 0447                      l1135 042A                      l1207 04E8  
                    l1223 0411                      l1215 03F8                      l1311 0549  
                    l1145 044E                      l1137 042E                      l1161 038D  
                    l1153 037F                      l1241 03DF                      l1233 03CE  
                    l1225 0417                      l1217 03FF                      l1321 0574  
                    l1313 054E                      l1305 053B                      l1401 06CA  
                    l1147 0455                      l1139 0439                      l1171 03A1  
                    l1155 0386                      l1251 03E6                      l1243 03E2  
                    l1235 03D2                      l1163 0350                      l1227 041E  
                    l1219 0403                      l1323 0578                      l1307 053E  
                    l1411 06F4                      l1403 06CD                      l1149 045C  
                    l1173 03AA                      l1165 0395                      l1181 0375  
                    l1157 0388                      l1261 03ED                      l1253 03E9  
                    l1245 03E3                      l1237 03DB                      l1229 0424  
                    l1341 05AD                      l1325 057C                      l1317 054F  
                    l1309 0544                      l1421 072A                      l1413 06F7  
                    l1405 06D7                      l1167 0398                      l1271 050B  
                    l1183 037A                      l1175 0369                      l1159 038A  
                    l1255 03EA                      l1247 03E4                      l1239 03DE  
                    l1191 04B4                      l1351 05EB                      l1343 05B3  
                    l1335 0587                      l1327 0580                      l1319 056C  
                    l1431 075B                      l1423 0733                      l1415 0705  
                    l1407 06DD                      l1169 039E                      l1273 0511  
                    l1265 04ED                      l1281 03B7                      l1177 036C  
                    l1257 03EB                      l1249 03E5                      l1193 04BB  
                    l1185 04A9                      l1353 05F0                      l1345 05B8  
                    l1329 0585                      l1441 0798                      l1433 0769  
                    l1425 0742                      l1417 070D                      l1409 06EA  
                    l1275 0349                      l1267 04F3                      l1283 03BE  
                    l1179 0372                      l1291 046A                      l1259 03EC  
                    l1195 04BF                      l1187 04AB                      l1355 05F4  
                    l1347 05BC                      l1339 05A3                      l1451 07CF  
                    l1443 07A1                      l1435 0778                      l1427 074A  
                    l1419 071B                      l1371 0632                      l1269 04FC  
                    l1285 03C4                      l1277 03AF                      l1293 0486  
                    l1197 04C3                      l1189 04B1                      l1349 05BF  
                    l1357 05FD                      l1453 07DE                      l1445 07A9  
                    l1437 0781                      l1429 0753                      l1381 0661  
                    l1373 0643                      l1287 03C7                      l1279 03B4  
                    l1295 048C                      l1199 04D4                      l1359 060D  
                    l1455 07E6                      l1447 07B7                      l1439 0790  
                    l1391 068F                      l1383 0667                      l1375 064B  
                    l1367 0612                      l1289 0467                      l1297 0344  
                    l1481 0561                      l1449 07C6                      l1393 0692  
                    l1385 0674                      l1377 0654                      l1369 0629  
                    l1299 035F                      l1395 06AF                      l1387 067E  
                    l1379 0657                      l1397 06B9                      l1389 0681  
                    l1399 06BC                      STR_1 001D                      STR_2 0022  
                    STR_3 0027                      STR_4 002C                      STR_5 002C  
                    STR_6 002C                      _CONT 0020                      _POT1 0024  
                    _POT2 0022         ?_Lcd_Write_String 0073                      _main 0612  
                    btemp 007E                      start 0000        ??_Lcd_Write_String 0075  
         __end_of_Lcd_Cmd 03AE                     ?_main 0070                     _ANSEL 0188  
         __end_of___lwdiv 04ED           __end_of___lwmod 0429                     _PORTA 0005  
                   _PORTB 0006                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISD 0088  
                   _cCONT 0026                     _cPOT1 002E                     _cPOT2 002A  
         __end_of_dpowers 001D                     _setup 03CE                     pclath 000A  
         __end_of_spiInit 0394           __end_of_spiRead 0368                     status 0003  
                   wtemp0 007E           __end_of_sprintf 0612          __end_of_Lcd_Init 0538  
        __end_of_Lcd_Port 0467           __initialization 07F3              __end_of_main 07F3  
                  ??_main 003F                    ?_setup 0070                    _ANSELH 0189  
                  _OSCCON 008F                 ??_Lcd_Cmd 0071                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
               ??___lwdiv 0074                 ??___lwmod 007C          __end_of_spiWrite 0349  
               ??_spiInit 0073                 ??_spiRead 0070                 ??_sprintf 0035  
         Lcd_Set_Cursor@a 0075           Lcd_Set_Cursor@b 0074   __end_of__initialization 07FC  
       __end_of_Lcd_Clear 0350            __pcstackCOMMON 0070             __end_of_setup 03EF  
          _Lcd_Set_Cursor 03AE                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
                 ??_setup 0074                __pbssBANK0 0020                __pmaintext 0612  
  __end_of_Lcd_Set_Cursor 03CE                ??_Lcd_Init 0074                ??_Lcd_Port 0070  
                 _SSPSTAT 0094                __stringtab 0003            _Lcd_Write_Char 0368  
                 _Lcd_Cmd 0394                 ?_spiWrite 0070                   ___lwdiv 04A9  
                 ___lwmod 03EF           ?_Lcd_Set_Cursor 0074                   __ptext1 0538  
                 __ptext2 03EF                   __ptext3 04A9                   __ptext4 0343  
                 __ptext5 035F                   __ptext6 0350                   __ptext7 03CE  
                 __ptext8 037E                   __ptext9 0467                   _dpowers 0013  
                 _spiInit 037E                   _spiRead 035F                   _sprintf 0538  
                 clrloop0 0358    __end_of_Lcd_Write_Char 037E      end_of_initialization 07FC  
              ??_spiWrite 0070                 Lcd_Port@a 0070                 _PORTBbits 0006  
               _PORTCbits 0007                 _PORTDbits 0008                 _TRISCbits 0087  
             spiWrite@dat 0070           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0073  
       Lcd_Write_String@i 0078                 _Lcd_Clear 0349            _spiReceiveWait 0350  
        _Lcd_Write_String 0467       start_initialization 07F3    __end_of_spiReceiveWait 0357  
              ?_Lcd_Clear 0070           Lcd_Write_Char@a 0072                 ___latbits 0002  
           __pcstackBANK0 0032                  ?_Lcd_Cmd 0070               sprintf@flag 0039  
             sprintf@prec 003A          ___lwdiv@dividend 0072           ?_spiReceiveWait 0070  
        ??_Lcd_Set_Cursor 0075                  ?___lwdiv 0070                  ?___lwmod 0078  
               __pstrings 0003                  ?_spiInit 0070                  ?_spiRead 0070  
        ___lwdiv@quotient 0075                  ?_sprintf 0032      spiInit@sTransmitEdge 0072  
               clear_ram0 0357        spiInit@sDataSample 0070                  Lcd_Cmd@a 0073  
             ??_Lcd_Clear 0074               __stringbase 0012          ??_Lcd_Write_Char 0071  
                _Lcd_Init 04ED                  _Lcd_Port 0429  __end_of_Lcd_Write_String 04A9  
      __end_of__stringtab 0013                sprintf@val 003B           ___lwdiv@divisor 0070  
         ___lwdiv@counter 0077                  __ptext10 0368                  __ptext11 03AE  
                __ptext12 04ED                  __ptext13 0349                  __ptext14 0394  
                __ptext15 0429                  _spiWrite 0343              spiInit@sType 0073  
       spiInit@sClockIdle 0071                 sprintf@ap 0038                 sprintf@sp 003D  
        ___lwmod@dividend 007A          ??_spiReceiveWait 0070                 stringcode 000D  
      Lcd_Set_Cursor@temp 0076                  sprintf@c 003E                  sprintf@f 0032  
         ___lwmod@divisor 0078           ___lwmod@counter 007D                  stringdir 000D  
                stringtab 0003  
