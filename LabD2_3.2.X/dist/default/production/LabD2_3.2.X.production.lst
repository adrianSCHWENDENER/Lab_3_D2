

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Jul 31 22:39:38 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     008F                     	;# 
   100     0090                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0094                     	;# 
   107     0095                     	;# 
   108     0096                     	;# 
   109     0097                     	;# 
   110     0098                     	;# 
   111     0099                     	;# 
   112     009A                     	;# 
   113     009B                     	;# 
   114     009C                     	;# 
   115     009D                     	;# 
   116     009E                     	;# 
   117     009F                     	;# 
   118     0105                     	;# 
   119     0107                     	;# 
   120     0108                     	;# 
   121     0109                     	;# 
   122     010C                     	;# 
   123     010C                     	;# 
   124     010D                     	;# 
   125     010E                     	;# 
   126     010F                     	;# 
   127     0185                     	;# 
   128     0187                     	;# 
   129     0188                     	;# 
   130     0189                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0088                     	;# 
   173     0089                     	;# 
   174     008C                     	;# 
   175     008D                     	;# 
   176     008E                     	;# 
   177     008F                     	;# 
   178     0090                     	;# 
   179     0091                     	;# 
   180     0092                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0094                     	;# 
   185     0095                     	;# 
   186     0096                     	;# 
   187     0097                     	;# 
   188     0098                     	;# 
   189     0099                     	;# 
   190     009A                     	;# 
   191     009B                     	;# 
   192     009C                     	;# 
   193     009D                     	;# 
   194     009E                     	;# 
   195     009F                     	;# 
   196     0105                     	;# 
   197     0107                     	;# 
   198     0108                     	;# 
   199     0109                     	;# 
   200     010C                     	;# 
   201     010C                     	;# 
   202     010D                     	;# 
   203     010E                     	;# 
   204     010F                     	;# 
   205     0185                     	;# 
   206     0187                     	;# 
   207     0188                     	;# 
   208     0189                     	;# 
   209     018C                     	;# 
   210     018D                     	;# 
   211     0000                     	;# 
   212     0001                     	;# 
   213     0002                     	;# 
   214     0003                     	;# 
   215     0004                     	;# 
   216     0005                     	;# 
   217     0006                     	;# 
   218     0007                     	;# 
   219     0008                     	;# 
   220     0009                     	;# 
   221     000A                     	;# 
   222     000B                     	;# 
   223     000C                     	;# 
   224     000D                     	;# 
   225     000E                     	;# 
   226     000E                     	;# 
   227     000F                     	;# 
   228     0010                     	;# 
   229     0011                     	;# 
   230     0012                     	;# 
   231     0013                     	;# 
   232     0014                     	;# 
   233     0015                     	;# 
   234     0015                     	;# 
   235     0016                     	;# 
   236     0017                     	;# 
   237     0018                     	;# 
   238     0019                     	;# 
   239     001A                     	;# 
   240     001B                     	;# 
   241     001B                     	;# 
   242     001C                     	;# 
   243     001D                     	;# 
   244     001E                     	;# 
   245     001F                     	;# 
   246     0081                     	;# 
   247     0085                     	;# 
   248     0086                     	;# 
   249     0087                     	;# 
   250     0088                     	;# 
   251     0089                     	;# 
   252     008C                     	;# 
   253     008D                     	;# 
   254     008E                     	;# 
   255     008F                     	;# 
   256     0090                     	;# 
   257     0091                     	;# 
   258     0092                     	;# 
   259     0093                     	;# 
   260     0093                     	;# 
   261     0093                     	;# 
   262     0094                     	;# 
   263     0095                     	;# 
   264     0096                     	;# 
   265     0097                     	;# 
   266     0098                     	;# 
   267     0099                     	;# 
   268     009A                     	;# 
   269     009B                     	;# 
   270     009C                     	;# 
   271     009D                     	;# 
   272     009E                     	;# 
   273     009F                     	;# 
   274     0105                     	;# 
   275     0107                     	;# 
   276     0108                     	;# 
   277     0109                     	;# 
   278     010C                     	;# 
   279     010C                     	;# 
   280     010D                     	;# 
   281     010E                     	;# 
   282     010F                     	;# 
   283     0185                     	;# 
   284     0187                     	;# 
   285     0188                     	;# 
   286     0189                     	;# 
   287     018C                     	;# 
   288     018D                     	;# 
   289     0000                     	;# 
   290     0001                     	;# 
   291     0002                     	;# 
   292     0003                     	;# 
   293     0004                     	;# 
   294     0005                     	;# 
   295     0006                     	;# 
   296     0007                     	;# 
   297     0008                     	;# 
   298     0009                     	;# 
   299     000A                     	;# 
   300     000B                     	;# 
   301     000C                     	;# 
   302     000D                     	;# 
   303     000E                     	;# 
   304     000E                     	;# 
   305     000F                     	;# 
   306     0010                     	;# 
   307     0011                     	;# 
   308     0012                     	;# 
   309     0013                     	;# 
   310     0014                     	;# 
   311     0015                     	;# 
   312     0015                     	;# 
   313     0016                     	;# 
   314     0017                     	;# 
   315     0018                     	;# 
   316     0019                     	;# 
   317     001A                     	;# 
   318     001B                     	;# 
   319     001B                     	;# 
   320     001C                     	;# 
   321     001D                     	;# 
   322     001E                     	;# 
   323     001F                     	;# 
   324     0081                     	;# 
   325     0085                     	;# 
   326     0086                     	;# 
   327     0087                     	;# 
   328     0088                     	;# 
   329     0089                     	;# 
   330     008C                     	;# 
   331     008D                     	;# 
   332     008E                     	;# 
   333     008F                     	;# 
   334     0090                     	;# 
   335     0091                     	;# 
   336     0092                     	;# 
   337     0093                     	;# 
   338     0093                     	;# 
   339     0093                     	;# 
   340     0094                     	;# 
   341     0095                     	;# 
   342     0096                     	;# 
   343     0097                     	;# 
   344     0098                     	;# 
   345     0099                     	;# 
   346     009A                     	;# 
   347     009B                     	;# 
   348     009C                     	;# 
   349     009D                     	;# 
   350     009E                     	;# 
   351     009F                     	;# 
   352     0105                     	;# 
   353     0107                     	;# 
   354     0108                     	;# 
   355     0109                     	;# 
   356     010C                     	;# 
   357     010C                     	;# 
   358     010D                     	;# 
   359     010E                     	;# 
   360     010F                     	;# 
   361     0185                     	;# 
   362     0187                     	;# 
   363     0188                     	;# 
   364     0189                     	;# 
   365     018C                     	;# 
   366     018D                     	;# 
   367     0013                     _SSPBUF	set	19
   368     0014                     _SSPCON	set	20
   369     001E                     _ADRESH	set	30
   370     001F                     _ADCON0	set	31
   371     001F                     _ADCON0bits	set	31
   372     000C                     _PIR1bits	set	12
   373     0009                     _PORTE	set	9
   374     0008                     _PORTD	set	8
   375     0007                     _PORTCbits	set	7
   376     0006                     _PORTB	set	6
   377     0005                     _PORTA	set	5
   378     000C                     _PIR1	set	12
   379     000B                     _INTCON	set	11
   380     0063                     _SSPIF	set	99
   381     0094                     _SSPSTATbits	set	148
   382     0094                     _SSPSTAT	set	148
   383     0086                     _TRISBbits	set	134
   384     0089                     _TRISEbits	set	137
   385     009F                     _ADCON1	set	159
   386     0089                     _TRISE	set	137
   387     0088                     _TRISD	set	136
   388     0087                     _TRISCbits	set	135
   389     0086                     _TRISB	set	134
   390     0085                     _TRISAbits	set	133
   391     0081                     _OPTION_REG	set	129
   392     008C                     _PIE1	set	140
   393     008F                     _OSCCON	set	143
   394     043B                     _TRISC3	set	1083
   395     043D                     _TRISC5	set	1085
   396     0189                     _ANSELHbits	set	393
   397     0188                     _ANSELbits	set	392
   398     0189                     _ANSELH	set	393
   399     0188                     _ANSEL	set	392
   400                           
   401                           	psect	cinit
   402     000F                     start_initialization:	
   403                           ; #config settings
   404                           
   405     000F                     __initialization:
   406                           
   407                           ; Clear objects allocated to COMMON
   408     000F  01F6               	clrf	__pbssCOMMON& (0+127)
   409     0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   410     0011                     end_of_initialization:	
   411                           ;End of C runtime variable initialization code
   412                           
   413     0011                     __end_of__initialization:
   414     0011  0183               	clrf	3
   415     0012  120A  118A  2961   	ljmp	_main	;jump to C main() function
   416                           
   417                           	psect	bssCOMMON
   418     0076                     __pbssCOMMON:
   419     0076                     _ADC:
   420     0076                     	ds	2
   421                           
   422                           	psect	cstackCOMMON
   423     0070                     __pcstackCOMMON:
   424     0070                     ?_spiWrite:
   425     0070                     ??_spiWrite:	
   426                           ; 1 bytes @ 0x0
   427                           
   428     0070                     ?_setup:	
   429                           ; 1 bytes @ 0x0
   430                           
   431     0070                     ?_isr:	
   432                           ; 1 bytes @ 0x0
   433                           
   434     0070                     ?_main:	
   435                           ; 1 bytes @ 0x0
   436                           
   437     0070                     ?_read_ADC:	
   438                           ; 1 bytes @ 0x0
   439                           
   440     0070                     spiWrite@dat:	
   441                           ; 2 bytes @ 0x0
   442                           
   443                           
   444                           ; 1 bytes @ 0x0
   445     0070                     	ds	2
   446     0072                     ??_read_ADC:
   447                           
   448                           ; 1 bytes @ 0x2
   449     0072                     	ds	2
   450     0074                     ??_isr:
   451                           
   452                           ; 1 bytes @ 0x4
   453     0074                     	ds	2
   454     0076                     ??_setup_ADC:
   455     0076                     ??_spiInit:	
   456                           ; 1 bytes @ 0x6
   457                           
   458     0076                     ??_setup:	
   459                           ; 1 bytes @ 0x6
   460                           
   461                           
   462                           	psect	cstackBANK0
   463     0020                     __pcstackBANK0:	
   464                           ; 1 bytes @ 0x6
   465                           
   466     0020                     ?_setup_ADC:
   467     0020                     ?_spiInit:	
   468                           ; 1 bytes @ 0x0
   469                           
   470     0020                     spiInit@sDataSample:	
   471                           ; 1 bytes @ 0x0
   472                           
   473     0020                     setup_ADC@channel:	
   474                           ; 1 bytes @ 0x0
   475                           
   476                           
   477                           ; 2 bytes @ 0x0
   478     0020                     	ds	1
   479     0021                     spiInit@sClockIdle:
   480                           
   481                           ; 1 bytes @ 0x1
   482     0021                     	ds	1
   483     0022                     spiInit@sTransmitEdge:
   484                           
   485                           ; 1 bytes @ 0x2
   486     0022                     	ds	1
   487     0023                     spiInit@sType:
   488                           
   489                           ; 1 bytes @ 0x3
   490     0023                     	ds	1
   491     0024                     ??_main:
   492                           
   493                           ; 1 bytes @ 0x4
   494     0024                     	ds	2
   495                           
   496                           	psect	maintext
   497     0161                     __pmaintext:	
   498 ;;
   499 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   500 ;;
   501 ;; *************** function _main *****************
   502 ;; Defined at:
   503 ;;		line 85 in file "Principal.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;		None
   506 ;; Auto vars:     Size  Location     Type
   507 ;;		None
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   512 ;; Tracked objects:
   513 ;;		On entry : B00/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   517 ;;      Params:         0       0       0       0       0
   518 ;;      Locals:         0       0       0       0       0
   519 ;;      Temps:          0       2       0       0       0
   520 ;;      Totals:         0       2       0       0       0
   521 ;;Total ram usage:        2 bytes
   522 ;; Hardware stack levels required when called: 4
   523 ;; This function calls:
   524 ;;		_setup
   525 ;; This function is called by:
   526 ;;		Startup code after reset
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530     0161                     _main:	
   531                           ;psect for function _main
   532                           
   533     0161                     l1444:	
   534                           ;incstack = 0
   535                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   536                           
   537                           
   538                           ;Principal.c: 86:     setup();
   539     0161  120A  118A  20EB  120A  118A  	fcall	_setup
   540     0166                     l1446:
   541                           
   542                           ;Principal.c: 88:         if (ADCON0bits.GO == 0){
   543     0166  1283               	bcf	3,5	;RP0=0, select bank0
   544     0167  1303               	bcf	3,6	;RP1=0, select bank0
   545     0168  189F               	btfsc	31,1	;volatile
   546     0169  296B               	goto	u251
   547     016A  296C               	goto	u250
   548     016B                     u251:
   549     016B  2979               	goto	l65
   550     016C                     u250:
   551     016C                     l1448:
   552                           
   553                           ;Principal.c: 89:             _delay((unsigned long)((5)*(8000000/4000.0)));
   554     016C  300D               	movlw	13
   555     016D  1283               	bcf	3,5	;RP0=0, select bank0
   556     016E  1303               	bcf	3,6	;RP1=0, select bank0
   557     016F  00A5               	movwf	??_main+1
   558     0170  30FB               	movlw	251
   559     0171  00A4               	movwf	??_main
   560     0172                     u267:
   561     0172  0BA4               	decfsz	??_main,f
   562     0173  2972               	goto	u267
   563     0174  0BA5               	decfsz	??_main+1,f
   564     0175  2972               	goto	u267
   565     0176                     l1450:
   566                           
   567                           ;Principal.c: 90:             ADCON0bits.GO = 1;
   568     0176  1283               	bcf	3,5	;RP0=0, select bank0
   569     0177  1303               	bcf	3,6	;RP1=0, select bank0
   570     0178  149F               	bsf	31,1	;volatile
   571     0179                     l65:
   572     0179  120A  118A  280C   	ljmp	start
   573     017C                     __end_of_main:
   574                           
   575                           	psect	text1
   576     00EB                     __ptext1:	
   577 ;; *************** function _setup *****************
   578 ;; Defined at:
   579 ;;		line 39 in file "Principal.c"
   580 ;; Parameters:    Size  Location     Type
   581 ;;		None
   582 ;; Auto vars:     Size  Location     Type
   583 ;;		None
   584 ;; Return value:  Size  Location     Type
   585 ;;                  1    wreg      void 
   586 ;; Registers used:
   587 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   593 ;;      Params:         0       0       0       0       0
   594 ;;      Locals:         0       0       0       0       0
   595 ;;      Temps:          0       0       0       0       0
   596 ;;      Totals:         0       0       0       0       0
   597 ;;Total ram usage:        0 bytes
   598 ;; Hardware stack levels used: 1
   599 ;; Hardware stack levels required when called: 3
   600 ;; This function calls:
   601 ;;		_setup_ADC
   602 ;;		_spiInit
   603 ;; This function is called by:
   604 ;;		_main
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608     00EB                     _setup:	
   609                           ;psect for function _setup
   610                           
   611     00EB                     l1414:	
   612                           ;incstack = 0
   613                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   614                           
   615                           
   616                           ;Principal.c: 41:     OSCCON = 0B01110001;
   617     00EB  3071               	movlw	113
   618     00EC  1683               	bsf	3,5	;RP0=1, select bank1
   619     00ED  1303               	bcf	3,6	;RP1=0, select bank1
   620     00EE  008F               	movwf	15	;volatile
   621                           
   622                           ;Principal.c: 44:     INTCON = 0B11000000;
   623     00EF  30C0               	movlw	192
   624     00F0  008B               	movwf	11	;volatile
   625                           
   626                           ;Principal.c: 45:     PIE1 = 0B01010000;
   627     00F1  3050               	movlw	80
   628     00F2  008C               	movwf	12	;volatile
   629     00F3                     l1416:
   630                           
   631                           ;Principal.c: 46:     PIR1 = 0B00000000;
   632     00F3  1283               	bcf	3,5	;RP0=0, select bank0
   633     00F4  1303               	bcf	3,6	;RP1=0, select bank0
   634     00F5  018C               	clrf	12	;volatile
   635     00F6                     l1418:
   636                           
   637                           ;Principal.c: 47:     OPTION_REG = 0;
   638     00F6  1683               	bsf	3,5	;RP0=1, select bank1
   639     00F7  1303               	bcf	3,6	;RP1=0, select bank1
   640     00F8  0181               	clrf	1	;volatile
   641     00F9                     l1420:
   642                           
   643                           ;Principal.c: 50:     setup_ADC(0);
   644     00F9  3000               	movlw	0
   645     00FA  1283               	bcf	3,5	;RP0=0, select bank0
   646     00FB  1303               	bcf	3,6	;RP1=0, select bank0
   647     00FC  00A0               	movwf	setup_ADC@channel
   648     00FD  00A1               	movwf	setup_ADC@channel+1
   649     00FE  120A  118A  2015  120A  118A  	fcall	_setup_ADC
   650     0103                     l1422:
   651                           
   652                           ;Principal.c: 53:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
   653     0103  1283               	bcf	3,5	;RP0=0, select bank0
   654     0104  1303               	bcf	3,6	;RP1=0, select bank0
   655     0105  01A0               	clrf	spiInit@sDataSample
   656     0106  01A1               	clrf	spiInit@sClockIdle
   657     0107  01A2               	clrf	spiInit@sTransmitEdge
   658     0108  3024               	movlw	36
   659     0109  120A  118A  2143  120A  118A  	fcall	_spiInit
   660     010E                     l1424:
   661                           
   662                           ;Principal.c: 54:     TRISAbits.TRISA5 = 1;
   663     010E  1683               	bsf	3,5	;RP0=1, select bank1
   664     010F  1303               	bcf	3,6	;RP1=0, select bank1
   665     0110  1685               	bsf	5,5	;volatile
   666     0111                     l1426:
   667                           
   668                           ;Principal.c: 57:     TRISB = 0;
   669     0111  0186               	clrf	6	;volatile
   670     0112                     l1428:
   671                           
   672                           ;Principal.c: 58:     TRISCbits.TRISC2 = 0;
   673     0112  1107               	bcf	7,2	;volatile
   674     0113                     l1430:
   675                           
   676                           ;Principal.c: 59:     TRISD = 0;
   677     0113  0188               	clrf	8	;volatile
   678     0114                     l1432:
   679                           
   680                           ;Principal.c: 60:     TRISE = 0;
   681     0114  0189               	clrf	9	;volatile
   682     0115                     l1434:
   683                           
   684                           ;Principal.c: 63:     PORTA = 0;
   685     0115  1283               	bcf	3,5	;RP0=0, select bank0
   686     0116  1303               	bcf	3,6	;RP1=0, select bank0
   687     0117  0185               	clrf	5	;volatile
   688     0118                     l1436:
   689                           
   690                           ;Principal.c: 64:     PORTB = 0;
   691     0118  0186               	clrf	6	;volatile
   692     0119                     l1438:
   693                           
   694                           ;Principal.c: 65:     PORTCbits.RC2 = 1;
   695     0119  1507               	bsf	7,2	;volatile
   696     011A                     l1440:
   697                           
   698                           ;Principal.c: 66:     PORTD = 0;
   699     011A  0188               	clrf	8	;volatile
   700     011B                     l1442:
   701                           
   702                           ;Principal.c: 67:     PORTE = 0;
   703     011B  0189               	clrf	9	;volatile
   704     011C                     l51:
   705     011C  0008               	return
   706     011D                     __end_of_setup:
   707                           
   708                           	psect	text2
   709     0143                     __ptext2:	
   710 ;; *************** function _spiInit *****************
   711 ;; Defined at:
   712 ;;		line 12 in file "SPI.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;  sType           1    wreg     enum E1292
   715 ;;  sDataSample     1    0[BANK0 ] enum E1300
   716 ;;  sClockIdle      1    1[BANK0 ] enum E1304
   717 ;;  sTransmitEdg    1    2[BANK0 ] enum E1308
   718 ;; Auto vars:     Size  Location     Type
   719 ;;  sType           1    3[BANK0 ] enum E1292
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, status,2, status,0
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   729 ;;      Params:         0       3       0       0       0
   730 ;;      Locals:         0       1       0       0       0
   731 ;;      Temps:          0       0       0       0       0
   732 ;;      Totals:         0       4       0       0       0
   733 ;;Total ram usage:        4 bytes
   734 ;; Hardware stack levels used: 1
   735 ;; Hardware stack levels required when called: 2
   736 ;; This function calls:
   737 ;;		Nothing
   738 ;; This function is called by:
   739 ;;		_setup
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743     0143                     _spiInit:	
   744                           ;psect for function _spiInit
   745                           
   746                           
   747                           ;incstack = 0
   748                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   749                           ;spiInit@sType stored from wreg
   750     0143  1283               	bcf	3,5	;RP0=0, select bank0
   751     0144  1303               	bcf	3,6	;RP1=0, select bank0
   752     0145  00A3               	movwf	spiInit@sType
   753     0146                     l1404:
   754                           
   755                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   756     0146  1683               	bsf	3,5	;RP0=1, select bank1
   757     0147  1303               	bcf	3,6	;RP1=0, select bank1
   758     0148  1287               	bcf	7,5	;volatile
   759                           
   760                           ;SPI.c: 15:     if(sType & 0b00000100)
   761     0149  1283               	bcf	3,5	;RP0=0, select bank0
   762     014A  1303               	bcf	3,6	;RP1=0, select bank0
   763     014B  1D23               	btfss	spiInit@sType,2
   764     014C  294E               	goto	u241
   765     014D  294F               	goto	u240
   766     014E                     u241:
   767     014E  2955               	goto	l1410
   768     014F                     u240:
   769     014F                     l1406:
   770                           
   771                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   772     014F  0822               	movf	spiInit@sTransmitEdge,w
   773     0150  1683               	bsf	3,5	;RP0=1, select bank1
   774     0151  1303               	bcf	3,6	;RP1=0, select bank1
   775     0152  0094               	movwf	20	;volatile
   776     0153                     l1408:
   777                           
   778                           ;SPI.c: 18:         TRISC3 = 1;
   779     0153  1587               	bsf	7,3	;volatile
   780                           
   781                           ;SPI.c: 19:     }
   782     0154  295B               	goto	l176
   783     0155                     l1410:
   784                           
   785                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   786     0155  0820               	movf	spiInit@sDataSample,w
   787     0156  0422               	iorwf	spiInit@sTransmitEdge,w
   788     0157  1683               	bsf	3,5	;RP0=1, select bank1
   789     0158  1303               	bcf	3,6	;RP1=0, select bank1
   790     0159  0094               	movwf	20	;volatile
   791     015A                     l1412:
   792                           
   793                           ;SPI.c: 23:         TRISC3 = 0;
   794     015A  1187               	bcf	7,3	;volatile
   795     015B                     l176:	
   796                           ;SPI.c: 24:     }
   797                           
   798                           
   799                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   800     015B  1283               	bcf	3,5	;RP0=0, select bank0
   801     015C  1303               	bcf	3,6	;RP1=0, select bank0
   802     015D  0823               	movf	spiInit@sType,w
   803     015E  0421               	iorwf	spiInit@sClockIdle,w
   804     015F  0094               	movwf	20	;volatile
   805     0160                     l177:
   806     0160  0008               	return
   807     0161                     __end_of_spiInit:
   808                           
   809                           	psect	text3
   810     0015                     __ptext3:	
   811 ;; *************** function _setup_ADC *****************
   812 ;; Defined at:
   813 ;;		line 8 in file "ADC_int.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  channel         2    0[BANK0 ] int 
   816 ;; Auto vars:     Size  Location     Type
   817 ;;		None
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   827 ;;      Params:         0       2       0       0       0
   828 ;;      Locals:         0       0       0       0       0
   829 ;;      Temps:          0       0       0       0       0
   830 ;;      Totals:         0       2       0       0       0
   831 ;;Total ram usage:        2 bytes
   832 ;; Hardware stack levels used: 1
   833 ;; Hardware stack levels required when called: 2
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_setup
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841     0015                     _setup_ADC:	
   842                           ;psect for function _setup_ADC
   843                           
   844     0015                     l1310:	
   845                           ;incstack = 0
   846                           ; Regs used in _setup_ADC: [wreg-fsr0h+status,2+status,0]
   847                           
   848                           
   849                           ;ADC_int.c: 9:     ADCON0 = 0B01000001;
   850     0015  3041               	movlw	65
   851     0016  1283               	bcf	3,5	;RP0=0, select bank0
   852     0017  1303               	bcf	3,6	;RP1=0, select bank0
   853     0018  009F               	movwf	31	;volatile
   854     0019                     l1312:
   855                           
   856                           ;ADC_int.c: 10:     ADCON1 = 0B00000000;
   857     0019  1683               	bsf	3,5	;RP0=1, select bank1
   858     001A  1303               	bcf	3,6	;RP1=0, select bank1
   859     001B  019F               	clrf	31	;volatile
   860     001C                     l1314:
   861                           
   862                           ;ADC_int.c: 11:     ANSEL = 0;
   863     001C  1683               	bsf	3,5	;RP0=1, select bank3
   864     001D  1703               	bsf	3,6	;RP1=1, select bank3
   865     001E  0188               	clrf	8	;volatile
   866     001F                     l1316:
   867                           
   868                           ;ADC_int.c: 12:     ANSELH = 0;
   869     001F  0189               	clrf	9	;volatile
   870                           
   871                           ;ADC_int.c: 14:     switch (channel){
   872     0020  28B7               	goto	l1398
   873     0021                     l93:	
   874                           ;ADC_int.c: 15:         case 0:
   875                           
   876                           
   877                           ;ADC_int.c: 16:             ANSELbits.ANS0 = 1;
   878     0021  1683               	bsf	3,5	;RP0=1, select bank3
   879     0022  1703               	bsf	3,6	;RP1=1, select bank3
   880     0023  1408               	bsf	8,0	;volatile
   881                           
   882                           ;ADC_int.c: 17:             TRISAbits.TRISA0 = 1;
   883     0024  1683               	bsf	3,5	;RP0=1, select bank1
   884     0025  1303               	bcf	3,6	;RP1=0, select bank1
   885     0026  1405               	bsf	5,0	;volatile
   886                           
   887                           ;ADC_int.c: 18:             break;
   888     0027  28EA               	goto	l108
   889     0028                     l1318:
   890                           
   891                           ;ADC_int.c: 20:             ADCON0bits.CHS = 0B0001;
   892     0028  081F               	movf	31,w	;volatile
   893     0029  39C3               	andlw	-61
   894     002A  3804               	iorlw	4
   895     002B  009F               	movwf	31	;volatile
   896     002C                     l1320:
   897                           
   898                           ;ADC_int.c: 21:             ANSELbits.ANS1 = 1;
   899     002C  1683               	bsf	3,5	;RP0=1, select bank3
   900     002D  1703               	bsf	3,6	;RP1=1, select bank3
   901     002E  1488               	bsf	8,1	;volatile
   902     002F                     l1322:
   903                           
   904                           ;ADC_int.c: 22:             TRISAbits.TRISA1 = 1;
   905     002F  1683               	bsf	3,5	;RP0=1, select bank1
   906     0030  1303               	bcf	3,6	;RP1=0, select bank1
   907     0031  1485               	bsf	5,1	;volatile
   908                           
   909                           ;ADC_int.c: 23:             break;
   910     0032  28EA               	goto	l108
   911     0033                     l1324:
   912                           
   913                           ;ADC_int.c: 25:             ADCON0bits.CHS = 0B0010;
   914     0033  081F               	movf	31,w	;volatile
   915     0034  39C3               	andlw	-61
   916     0035  3808               	iorlw	8
   917     0036  009F               	movwf	31	;volatile
   918     0037                     l1326:
   919                           
   920                           ;ADC_int.c: 26:             ANSELbits.ANS2 = 1;
   921     0037  1683               	bsf	3,5	;RP0=1, select bank3
   922     0038  1703               	bsf	3,6	;RP1=1, select bank3
   923     0039  1508               	bsf	8,2	;volatile
   924     003A                     l1328:
   925                           
   926                           ;ADC_int.c: 27:             TRISAbits.TRISA2 = 1;
   927     003A  1683               	bsf	3,5	;RP0=1, select bank1
   928     003B  1303               	bcf	3,6	;RP1=0, select bank1
   929     003C  1505               	bsf	5,2	;volatile
   930                           
   931                           ;ADC_int.c: 28:             break;
   932     003D  28EA               	goto	l108
   933     003E                     l1330:
   934                           
   935                           ;ADC_int.c: 30:             ADCON0bits.CHS = 0B0011;
   936     003E  081F               	movf	31,w	;volatile
   937     003F  39C3               	andlw	-61
   938     0040  380C               	iorlw	12
   939     0041  009F               	movwf	31	;volatile
   940     0042                     l1332:
   941                           
   942                           ;ADC_int.c: 31:             ANSELbits.ANS3 = 1;
   943     0042  1683               	bsf	3,5	;RP0=1, select bank3
   944     0043  1703               	bsf	3,6	;RP1=1, select bank3
   945     0044  1588               	bsf	8,3	;volatile
   946     0045                     l1334:
   947                           
   948                           ;ADC_int.c: 32:             TRISAbits.TRISA3 = 1;
   949     0045  1683               	bsf	3,5	;RP0=1, select bank1
   950     0046  1303               	bcf	3,6	;RP1=0, select bank1
   951     0047  1585               	bsf	5,3	;volatile
   952                           
   953                           ;ADC_int.c: 33:             break;
   954     0048  28EA               	goto	l108
   955     0049                     l1336:
   956                           
   957                           ;ADC_int.c: 35:             ADCON0bits.CHS = 0B0100;
   958     0049  081F               	movf	31,w	;volatile
   959     004A  39C3               	andlw	-61
   960     004B  3810               	iorlw	16
   961     004C  009F               	movwf	31	;volatile
   962     004D                     l1338:
   963                           
   964                           ;ADC_int.c: 36:             ANSELbits.ANS4 = 1;
   965     004D  1683               	bsf	3,5	;RP0=1, select bank3
   966     004E  1703               	bsf	3,6	;RP1=1, select bank3
   967     004F  1608               	bsf	8,4	;volatile
   968     0050                     l1340:
   969                           
   970                           ;ADC_int.c: 37:             TRISAbits.TRISA5 = 1;
   971     0050  1683               	bsf	3,5	;RP0=1, select bank1
   972     0051  1303               	bcf	3,6	;RP1=0, select bank1
   973     0052  1685               	bsf	5,5	;volatile
   974                           
   975                           ;ADC_int.c: 38:             break;
   976     0053  28EA               	goto	l108
   977     0054                     l1342:
   978                           
   979                           ;ADC_int.c: 40:             ADCON0bits.CHS = 0B0101;
   980     0054  081F               	movf	31,w	;volatile
   981     0055  39C3               	andlw	-61
   982     0056  3814               	iorlw	20
   983     0057  009F               	movwf	31	;volatile
   984     0058                     l1344:
   985                           
   986                           ;ADC_int.c: 41:             ANSELbits.ANS5 = 1;
   987     0058  1683               	bsf	3,5	;RP0=1, select bank3
   988     0059  1703               	bsf	3,6	;RP1=1, select bank3
   989     005A  1688               	bsf	8,5	;volatile
   990     005B                     l1346:
   991                           
   992                           ;ADC_int.c: 42:             TRISEbits.TRISE0 = 1;
   993     005B  1683               	bsf	3,5	;RP0=1, select bank1
   994     005C  1303               	bcf	3,6	;RP1=0, select bank1
   995     005D  1409               	bsf	9,0	;volatile
   996                           
   997                           ;ADC_int.c: 43:             break;
   998     005E  28EA               	goto	l108
   999     005F                     l1348:
  1000                           
  1001                           ;ADC_int.c: 45:             ADCON0bits.CHS = 0B0110;
  1002     005F  081F               	movf	31,w	;volatile
  1003     0060  39C3               	andlw	-61
  1004     0061  3818               	iorlw	24
  1005     0062  009F               	movwf	31	;volatile
  1006     0063                     l1350:
  1007                           
  1008                           ;ADC_int.c: 46:             ANSELbits.ANS6 = 1;
  1009     0063  1683               	bsf	3,5	;RP0=1, select bank3
  1010     0064  1703               	bsf	3,6	;RP1=1, select bank3
  1011     0065  1708               	bsf	8,6	;volatile
  1012     0066                     l1352:
  1013                           
  1014                           ;ADC_int.c: 47:             TRISEbits.TRISE1 = 1;
  1015     0066  1683               	bsf	3,5	;RP0=1, select bank1
  1016     0067  1303               	bcf	3,6	;RP1=0, select bank1
  1017     0068  1489               	bsf	9,1	;volatile
  1018                           
  1019                           ;ADC_int.c: 48:             break;
  1020     0069  28EA               	goto	l108
  1021     006A                     l1354:
  1022                           
  1023                           ;ADC_int.c: 50:             ADCON0bits.CHS = 0B0111;
  1024     006A  081F               	movf	31,w	;volatile
  1025     006B  39C3               	andlw	-61
  1026     006C  381C               	iorlw	28
  1027     006D  009F               	movwf	31	;volatile
  1028     006E                     l1356:
  1029                           
  1030                           ;ADC_int.c: 51:             ANSELbits.ANS7 = 1;
  1031     006E  1683               	bsf	3,5	;RP0=1, select bank3
  1032     006F  1703               	bsf	3,6	;RP1=1, select bank3
  1033     0070  1788               	bsf	8,7	;volatile
  1034     0071                     l1358:
  1035                           
  1036                           ;ADC_int.c: 52:             TRISEbits.TRISE2 = 1;
  1037     0071  1683               	bsf	3,5	;RP0=1, select bank1
  1038     0072  1303               	bcf	3,6	;RP1=0, select bank1
  1039     0073  1509               	bsf	9,2	;volatile
  1040                           
  1041                           ;ADC_int.c: 53:             break;
  1042     0074  28EA               	goto	l108
  1043     0075                     l1360:
  1044                           
  1045                           ;ADC_int.c: 55:             ADCON0bits.CHS = 0B1000;
  1046     0075  081F               	movf	31,w	;volatile
  1047     0076  39C3               	andlw	-61
  1048     0077  3820               	iorlw	32
  1049     0078  009F               	movwf	31	;volatile
  1050     0079                     l1362:
  1051                           
  1052                           ;ADC_int.c: 56:             ANSELHbits.ANS8 = 1;
  1053     0079  1683               	bsf	3,5	;RP0=1, select bank3
  1054     007A  1703               	bsf	3,6	;RP1=1, select bank3
  1055     007B  1409               	bsf	9,0	;volatile
  1056     007C                     l1364:
  1057                           
  1058                           ;ADC_int.c: 57:             TRISBbits.TRISB2 = 1;
  1059     007C  1683               	bsf	3,5	;RP0=1, select bank1
  1060     007D  1303               	bcf	3,6	;RP1=0, select bank1
  1061     007E  1506               	bsf	6,2	;volatile
  1062                           
  1063                           ;ADC_int.c: 58:             break;
  1064     007F  28EA               	goto	l108
  1065     0080                     l1366:
  1066                           
  1067                           ;ADC_int.c: 60:             ADCON0bits.CHS = 0B1001;
  1068     0080  081F               	movf	31,w	;volatile
  1069     0081  39C3               	andlw	-61
  1070     0082  3824               	iorlw	36
  1071     0083  009F               	movwf	31	;volatile
  1072     0084                     l1368:
  1073                           
  1074                           ;ADC_int.c: 61:             ANSELHbits.ANS9 = 1;
  1075     0084  1683               	bsf	3,5	;RP0=1, select bank3
  1076     0085  1703               	bsf	3,6	;RP1=1, select bank3
  1077     0086  1489               	bsf	9,1	;volatile
  1078     0087                     l1370:
  1079                           
  1080                           ;ADC_int.c: 62:             TRISBbits.TRISB3 = 1;
  1081     0087  1683               	bsf	3,5	;RP0=1, select bank1
  1082     0088  1303               	bcf	3,6	;RP1=0, select bank1
  1083     0089  1586               	bsf	6,3	;volatile
  1084                           
  1085                           ;ADC_int.c: 63:             break;
  1086     008A  28EA               	goto	l108
  1087     008B                     l1372:
  1088                           
  1089                           ;ADC_int.c: 65:             ADCON0bits.CHS = 0B1010;
  1090     008B  081F               	movf	31,w	;volatile
  1091     008C  39C3               	andlw	-61
  1092     008D  3828               	iorlw	40
  1093     008E  009F               	movwf	31	;volatile
  1094     008F                     l1374:
  1095                           
  1096                           ;ADC_int.c: 66:             ANSELHbits.ANS10 = 1;
  1097     008F  1683               	bsf	3,5	;RP0=1, select bank3
  1098     0090  1703               	bsf	3,6	;RP1=1, select bank3
  1099     0091  1509               	bsf	9,2	;volatile
  1100     0092                     l1376:
  1101                           
  1102                           ;ADC_int.c: 67:             TRISBbits.TRISB1 = 1;
  1103     0092  1683               	bsf	3,5	;RP0=1, select bank1
  1104     0093  1303               	bcf	3,6	;RP1=0, select bank1
  1105     0094  1486               	bsf	6,1	;volatile
  1106                           
  1107                           ;ADC_int.c: 68:             break;
  1108     0095  28EA               	goto	l108
  1109     0096                     l1378:
  1110                           
  1111                           ;ADC_int.c: 70:             ADCON0bits.CHS = 0B1011;
  1112     0096  081F               	movf	31,w	;volatile
  1113     0097  39C3               	andlw	-61
  1114     0098  382C               	iorlw	44
  1115     0099  009F               	movwf	31	;volatile
  1116     009A                     l1380:
  1117                           
  1118                           ;ADC_int.c: 71:             ANSELHbits.ANS11 = 1;
  1119     009A  1683               	bsf	3,5	;RP0=1, select bank3
  1120     009B  1703               	bsf	3,6	;RP1=1, select bank3
  1121     009C  1589               	bsf	9,3	;volatile
  1122     009D                     l1382:
  1123                           
  1124                           ;ADC_int.c: 72:             TRISBbits.TRISB4 = 1;
  1125     009D  1683               	bsf	3,5	;RP0=1, select bank1
  1126     009E  1303               	bcf	3,6	;RP1=0, select bank1
  1127     009F  1606               	bsf	6,4	;volatile
  1128                           
  1129                           ;ADC_int.c: 73:             break;
  1130     00A0  28EA               	goto	l108
  1131     00A1                     l1384:
  1132                           
  1133                           ;ADC_int.c: 75:             ADCON0bits.CHS = 0B1100;
  1134     00A1  081F               	movf	31,w	;volatile
  1135     00A2  39C3               	andlw	-61
  1136     00A3  3830               	iorlw	48
  1137     00A4  009F               	movwf	31	;volatile
  1138     00A5                     l1386:
  1139                           
  1140                           ;ADC_int.c: 76:             ANSELHbits.ANS12 = 1;
  1141     00A5  1683               	bsf	3,5	;RP0=1, select bank3
  1142     00A6  1703               	bsf	3,6	;RP1=1, select bank3
  1143     00A7  1609               	bsf	9,4	;volatile
  1144     00A8                     l1388:
  1145                           
  1146                           ;ADC_int.c: 77:             TRISBbits.TRISB0 = 1;
  1147     00A8  1683               	bsf	3,5	;RP0=1, select bank1
  1148     00A9  1303               	bcf	3,6	;RP1=0, select bank1
  1149     00AA  1406               	bsf	6,0	;volatile
  1150                           
  1151                           ;ADC_int.c: 78:             break;
  1152     00AB  28EA               	goto	l108
  1153     00AC                     l1390:
  1154                           
  1155                           ;ADC_int.c: 80:             ADCON0bits.CHS = 0B1101;
  1156     00AC  081F               	movf	31,w	;volatile
  1157     00AD  39C3               	andlw	-61
  1158     00AE  3834               	iorlw	52
  1159     00AF  009F               	movwf	31	;volatile
  1160     00B0                     l1392:
  1161                           
  1162                           ;ADC_int.c: 81:             ANSELHbits.ANS13 = 1;
  1163     00B0  1683               	bsf	3,5	;RP0=1, select bank3
  1164     00B1  1703               	bsf	3,6	;RP1=1, select bank3
  1165     00B2  1689               	bsf	9,5	;volatile
  1166     00B3                     l1394:
  1167                           
  1168                           ;ADC_int.c: 82:             TRISBbits.TRISB5 = 1;
  1169     00B3  1683               	bsf	3,5	;RP0=1, select bank1
  1170     00B4  1303               	bcf	3,6	;RP1=0, select bank1
  1171     00B5  1686               	bsf	6,5	;volatile
  1172                           
  1173                           ;ADC_int.c: 83:             break;
  1174     00B6  28EA               	goto	l108
  1175     00B7                     l1398:
  1176                           
  1177                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1178                           ; Switch size 1, requested type "simple"
  1179                           ; Number of cases is 1, Range of values is 0 to 0
  1180                           ; switch strategies available:
  1181                           ; Name         Instructions Cycles
  1182                           ; simple_byte            4     3 (average)
  1183                           ; direct_byte           11     8 (fixed)
  1184                           ; jumptable            260     6 (fixed)
  1185                           ;	Chosen strategy is simple_byte
  1186     00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1187     00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1188     00B9  0821               	movf	setup_ADC@channel+1,w
  1189     00BA  3A00               	xorlw	0	; case 0
  1190     00BB  1903               	skipnz
  1191     00BC  28BE               	goto	l1474
  1192     00BD  28EA               	goto	l108
  1193     00BE                     l1474:
  1194                           
  1195                           ; Switch size 1, requested type "simple"
  1196                           ; Number of cases is 14, Range of values is 0 to 13
  1197                           ; switch strategies available:
  1198                           ; Name         Instructions Cycles
  1199                           ; simple_byte           43    22 (average)
  1200                           ; direct_byte           50     8 (fixed)
  1201                           ; jumptable            260     6 (fixed)
  1202                           ;	Chosen strategy is simple_byte
  1203     00BE  0820               	movf	setup_ADC@channel,w
  1204     00BF  3A00               	xorlw	0	; case 0
  1205     00C0  1903               	skipnz
  1206     00C1  2821               	goto	l93
  1207     00C2  3A01               	xorlw	1	; case 1
  1208     00C3  1903               	skipnz
  1209     00C4  2828               	goto	l1318
  1210     00C5  3A03               	xorlw	3	; case 2
  1211     00C6  1903               	skipnz
  1212     00C7  2833               	goto	l1324
  1213     00C8  3A01               	xorlw	1	; case 3
  1214     00C9  1903               	skipnz
  1215     00CA  283E               	goto	l1330
  1216     00CB  3A07               	xorlw	7	; case 4
  1217     00CC  1903               	skipnz
  1218     00CD  2849               	goto	l1336
  1219     00CE  3A01               	xorlw	1	; case 5
  1220     00CF  1903               	skipnz
  1221     00D0  2854               	goto	l1342
  1222     00D1  3A03               	xorlw	3	; case 6
  1223     00D2  1903               	skipnz
  1224     00D3  285F               	goto	l1348
  1225     00D4  3A01               	xorlw	1	; case 7
  1226     00D5  1903               	skipnz
  1227     00D6  286A               	goto	l1354
  1228     00D7  3A0F               	xorlw	15	; case 8
  1229     00D8  1903               	skipnz
  1230     00D9  2875               	goto	l1360
  1231     00DA  3A01               	xorlw	1	; case 9
  1232     00DB  1903               	skipnz
  1233     00DC  2880               	goto	l1366
  1234     00DD  3A03               	xorlw	3	; case 10
  1235     00DE  1903               	skipnz
  1236     00DF  288B               	goto	l1372
  1237     00E0  3A01               	xorlw	1	; case 11
  1238     00E1  1903               	skipnz
  1239     00E2  2896               	goto	l1378
  1240     00E3  3A07               	xorlw	7	; case 12
  1241     00E4  1903               	skipnz
  1242     00E5  28A1               	goto	l1384
  1243     00E6  3A01               	xorlw	1	; case 13
  1244     00E7  1903               	skipnz
  1245     00E8  28AC               	goto	l1390
  1246     00E9  28EA               	goto	l108
  1247     00EA                     l108:
  1248     00EA  0008               	return
  1249     00EB                     __end_of_setup_ADC:
  1250                           
  1251                           	psect	text4
  1252     011D                     __ptext4:	
  1253 ;; *************** function _isr *****************
  1254 ;; Defined at:
  1255 ;;		line 71 in file "Principal.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;		None
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg, status,2, status,0, pclath, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1269 ;;      Params:         0       0       0       0       0
  1270 ;;      Locals:         0       0       0       0       0
  1271 ;;      Temps:          2       0       0       0       0
  1272 ;;      Totals:         2       0       0       0       0
  1273 ;;Total ram usage:        2 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; Hardware stack levels required when called: 1
  1276 ;; This function calls:
  1277 ;;		_read_ADC
  1278 ;;		_spiWrite
  1279 ;; This function is called by:
  1280 ;;		Interrupt level 1
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284     011D                     _isr:	
  1285                           ;psect for function _isr
  1286                           
  1287     011D                     i1l1268:
  1288                           
  1289                           ;Principal.c: 72:     if (PIR1bits.ADIF){
  1290     011D  1283               	bcf	3,5	;RP0=0, select bank0
  1291     011E  1303               	bcf	3,6	;RP1=0, select bank0
  1292     011F  1F0C               	btfss	12,6	;volatile
  1293     0120  2922               	goto	u21_21
  1294     0121  2923               	goto	u21_20
  1295     0122                     u21_21:
  1296     0122  292C               	goto	i1l1272
  1297     0123                     u21_20:
  1298     0123                     i1l1270:
  1299                           
  1300                           ;Principal.c: 73:         ADC = read_ADC();
  1301     0123  120A  118A  217C  120A  118A  	fcall	_read_ADC
  1302     0128  0871               	movf	?_read_ADC+1,w
  1303     0129  00F7               	movwf	_ADC+1
  1304     012A  0870               	movf	?_read_ADC,w
  1305     012B  00F6               	movwf	_ADC
  1306     012C                     i1l1272:
  1307                           
  1308                           ;Principal.c: 76:     if (SSPIF == 1){
  1309     012C  1283               	bcf	3,5	;RP0=0, select bank0
  1310     012D  1303               	bcf	3,6	;RP1=0, select bank0
  1311     012E  1D8C               	btfss	12,3	;volatile
  1312     012F  2931               	goto	u22_21
  1313     0130  2932               	goto	u22_20
  1314     0131                     u22_21:
  1315     0131  2938               	goto	i1l1276
  1316     0132                     u22_20:
  1317     0132                     i1l1274:
  1318                           
  1319                           ;Principal.c: 77:         spiWrite(ADC);
  1320     0132  0876               	movf	_ADC,w
  1321     0133  120A  118A  2186  120A  118A  	fcall	_spiWrite
  1322     0138                     i1l1276:
  1323                           
  1324                           ;Principal.c: 80:     PIR1bits.ADIF = 0;
  1325     0138  1283               	bcf	3,5	;RP0=0, select bank0
  1326     0139  1303               	bcf	3,6	;RP1=0, select bank0
  1327     013A  130C               	bcf	12,6	;volatile
  1328     013B                     i1l1278:
  1329                           
  1330                           ;Principal.c: 81:     SSPIF = 0;
  1331     013B  118C               	bcf	12,3	;volatile
  1332     013C                     i1l58:
  1333     013C  0875               	movf	??_isr+1,w
  1334     013D  008A               	movwf	10
  1335     013E  0E74               	swapf	??_isr,w
  1336     013F  0083               	movwf	3
  1337     0140  0EFE               	swapf	btemp,f
  1338     0141  0E7E               	swapf	btemp,w
  1339     0142  0009               	retfie
  1340     0143                     __end_of_isr:
  1341                           
  1342                           	psect	intentry
  1343     0004                     __pintentry:	
  1344                           ;incstack = 0
  1345                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1346                           
  1347     0004                     interrupt_function:
  1348     007E                     saved_w	set	btemp
  1349     0004  00FE               	movwf	btemp
  1350     0005  0E03               	swapf	3,w
  1351     0006  00F4               	movwf	??_isr
  1352     0007  080A               	movf	10,w
  1353     0008  00F5               	movwf	??_isr+1
  1354     0009  120A  118A  291D   	ljmp	_isr
  1355                           
  1356                           	psect	text5
  1357     0186                     __ptext5:	
  1358 ;; *************** function _spiWrite *****************
  1359 ;; Defined at:
  1360 ;;		line 34 in file "SPI.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  dat             1    wreg     unsigned char 
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;  dat             1    0[COMMON] unsigned char 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1374 ;;      Params:         0       0       0       0       0
  1375 ;;      Locals:         1       0       0       0       0
  1376 ;;      Temps:          0       0       0       0       0
  1377 ;;      Totals:         1       0       0       0       0
  1378 ;;Total ram usage:        1 bytes
  1379 ;; Hardware stack levels used: 1
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		_isr
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387     0186                     _spiWrite:	
  1388                           ;psect for function _spiWrite
  1389                           
  1390                           
  1391                           ;incstack = 0
  1392                           ; Regs used in _spiWrite: [wreg]
  1393                           ;spiWrite@dat stored from wreg
  1394     0186  00F0               	movwf	spiWrite@dat
  1395     0187                     i1l924:
  1396                           
  1397                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1398     0187  0870               	movf	spiWrite@dat,w
  1399     0188  1283               	bcf	3,5	;RP0=0, select bank0
  1400     0189  1303               	bcf	3,6	;RP1=0, select bank0
  1401     018A  0093               	movwf	19	;volatile
  1402     018B                     i1l186:
  1403     018B  0008               	return
  1404     018C                     __end_of_spiWrite:
  1405                           
  1406                           	psect	text6
  1407     017C                     __ptext6:	
  1408 ;; *************** function _read_ADC *****************
  1409 ;; Defined at:
  1410 ;;		line 87 in file "ADC_int.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;		None
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;		None
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  2    0[COMMON] int 
  1417 ;; Registers used:
  1418 ;;		wreg
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1424 ;;      Params:         2       0       0       0       0
  1425 ;;      Locals:         0       0       0       0       0
  1426 ;;      Temps:          2       0       0       0       0
  1427 ;;      Totals:         4       0       0       0       0
  1428 ;;Total ram usage:        4 bytes
  1429 ;; Hardware stack levels used: 1
  1430 ;; This function calls:
  1431 ;;		Nothing
  1432 ;; This function is called by:
  1433 ;;		_isr
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437     017C                     _read_ADC:	
  1438                           ;psect for function _read_ADC
  1439                           
  1440     017C                     i1l1264:	
  1441                           ;incstack = 0
  1442                           ; Regs used in _read_ADC: [wreg]
  1443                           
  1444                           
  1445                           ;ADC_int.c: 88:     return ADRESH;
  1446     017C  1283               	bcf	3,5	;RP0=0, select bank0
  1447     017D  1303               	bcf	3,6	;RP1=0, select bank0
  1448     017E  081E               	movf	30,w	;volatile
  1449     017F  00F2               	movwf	??_read_ADC
  1450     0180  01F3               	clrf	??_read_ADC+1
  1451     0181  0872               	movf	??_read_ADC,w
  1452     0182  00F0               	movwf	?_read_ADC
  1453     0183  0873               	movf	??_read_ADC+1,w
  1454     0184  00F1               	movwf	?_read_ADC+1
  1455     0185                     i1l111:
  1456     0185  0008               	return
  1457     0186                     __end_of_read_ADC:
  1458     007E                     btemp	set	126	;btemp
  1459     007E                     wtemp0	set	126
  1460                           
  1461                           	psect	idloc
  1462                           
  1463                           ;Config register IDLOC0 @ 0x2000
  1464                           ;	unspecified, using default values
  1465     2000                     	org	8192
  1466     2000  3FFF               	dw	16383
  1467                           
  1468                           ;Config register IDLOC1 @ 0x2001
  1469                           ;	unspecified, using default values
  1470     2001                     	org	8193
  1471     2001  3FFF               	dw	16383
  1472                           
  1473                           ;Config register IDLOC2 @ 0x2002
  1474                           ;	unspecified, using default values
  1475     2002                     	org	8194
  1476     2002  3FFF               	dw	16383
  1477                           
  1478                           ;Config register IDLOC3 @ 0x2003
  1479                           ;	unspecified, using default values
  1480     2003                     	org	8195
  1481     2003  3FFF               	dw	16383
  1482                           
  1483                           	psect	config
  1484                           
  1485                           ;Config register CONFIG1 @ 0x2007
  1486                           ;	Oscillator Selection bits
  1487                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1488                           ;	Watchdog Timer Enable bit
  1489                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1490                           ;	Power-up Timer Enable bit
  1491                           ;	PWRTE = OFF, PWRT disabled
  1492                           ;	RE3/MCLR pin function select bit
  1493                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1494                           ;	Code Protection bit
  1495                           ;	CP = OFF, Program memory code protection is disabled
  1496                           ;	Data Code Protection bit
  1497                           ;	CPD = OFF, Data memory code protection is disabled
  1498                           ;	Brown Out Reset Selection bits
  1499                           ;	BOREN = OFF, BOR disabled
  1500                           ;	Internal External Switchover bit
  1501                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1502                           ;	Fail-Safe Clock Monitor Enabled bit
  1503                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1504                           ;	Low Voltage Programming Enable bit
  1505                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1506                           ;	In-Circuit Debugger Mode bit
  1507                           ;	DEBUG = 0x1, unprogrammed default
  1508     2007                     	org	8199
  1509     2007  20D6               	dw	8406
  1510                           
  1511                           ;Config register CONFIG2 @ 0x2008
  1512                           ;	Brown-out Reset Selection bit
  1513                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1514                           ;	Flash Program Memory Self Write Enable bits
  1515                           ;	WRT = OFF, Write protection off
  1516     2008                     	org	8200
  1517     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      6       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_read_ADC

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     577
                                              4 BANK0      2     2      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     577
                          _setup_ADC
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _setup_ADC                                            2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              4 COMMON     2     2      0
                           _read_ADC
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _read_ADC                                             4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _setup_ADC
     _spiInit

 _isr (ROOT)
   _read_ADC
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Jul 31 22:39:38 2023

            _SSPSTATbits 0094                       l51 011C                       l65 0179  
                     l93 0021                      l108 00EA                      _ADC 0076  
                    l176 015B                      l177 0160                      u240 014F  
                    u241 014E                      u250 016C                      u251 016B  
                    u267 0172                      _isr 011D                     l1310 0015  
                   l1320 002C                     l1312 0019                     l1330 003E  
                   l1322 002F                     l1314 001C                     l1410 0155  
                   l1340 0050                     l1332 0042                     l1324 0033  
                   l1316 001F                     l1412 015A                     l1404 0146  
                   l1420 00F9                     l1350 0063                     l1342 0054  
                   l1334 0045                     l1326 0037                     l1318 0028  
                   l1406 014F                     l1430 0113                     l1422 0103  
                   l1414 00EB                     l1360 0075                     l1352 0066  
                   l1344 0058                     l1336 0049                     l1328 003A  
                   l1408 0153                     l1440 011A                     l1432 0114  
                   l1424 010E                     l1416 00F3                     l1370 0087  
                   l1362 0079                     l1354 006A                     l1346 005B  
                   l1338 004D                     l1442 011B                     l1434 0115  
                   l1426 0111                     l1418 00F6                     l1450 0176  
                   l1380 009A                     l1372 008B                     l1364 007C  
                   l1356 006E                     l1348 005F                     l1436 0118  
                   l1428 0112                     l1444 0161                     l1390 00AC  
                   l1382 009D                     l1374 008F                     l1366 0080  
                   l1358 0071                     l1438 0119                     l1446 0166  
                   l1392 00B0                     l1384 00A1                     l1376 0092  
                   l1368 0084                     l1448 016C                     l1474 00BE  
                   l1394 00B3                     l1386 00A5                     l1378 0096  
                   l1388 00A8                     l1398 00B7                     ?_isr 0070  
                   _PIE1 008C                     _PIR1 000C                     i1l58 013C  
                   _main 0161                     btemp 007E                     start 000C  
                  ??_isr 0074                    ?_main 0070                    _ANSEL 0188  
                  i1l111 0185                    i1l186 018B                    i1l924 0187  
                  u21_20 0123                    u21_21 0122                    u22_20 0132  
                  u22_21 0131                    _PORTA 0005                    _PORTB 0006  
                  _PORTD 0008                    _PORTE 0009                    _TRISB 0086  
                  _TRISD 0088                    _TRISE 0089                    _SSPIF 0063  
                  _setup 00EB                    pclath 000A          __end_of_spiInit 0161  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 017C                   ??_main 0024                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   i1l1270 0123                   i1l1264 017C  
                 i1l1272 012C                   i1l1274 0132                   i1l1276 0138  
                 i1l1268 011D                   i1l1278 013B                   _INTCON 000B  
                 _OSCCON 008F                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013         __end_of_read_ADC 0186  
                 saved_w 007E         __end_of_spiWrite 018C                ??_spiInit 0076  
__end_of__initialization 0011           __pcstackCOMMON 0070            __end_of_setup 011D  
                ??_setup 0076               __pmaintext 0161               __pintentry 0004  
                _SSPSTAT 0094                ?_read_ADC 0070                ?_spiWrite 0070  
              _ANSELbits 0188                  __ptext1 00EB                  __ptext2 0143  
                __ptext3 0015                  __ptext4 011D                  __ptext5 0186  
                __ptext6 017C                  _spiInit 0143     end_of_initialization 0011  
             ??_read_ADC 0072        __end_of_setup_ADC 00EB               ??_spiWrite 0070  
              _PORTCbits 0007                _TRISAbits 0085                _TRISBbits 0086  
              _TRISCbits 0087                _TRISEbits 0089              spiWrite@dat 0070  
    start_initialization 000F              __end_of_isr 0143              __pbssCOMMON 0076  
              ___latbits 0002            __pcstackBANK0 0020         setup_ADC@channel 0020  
               ?_spiInit 0020     spiInit@sTransmitEdge 0022        interrupt_function 0004  
     spiInit@sDataSample 0020                 _PIR1bits 000C                _setup_ADC 0015  
             _ADCON0bits 001F               ?_setup_ADC 0020               _ANSELHbits 0189  
               _read_ADC 017C                 _spiWrite 0186             spiInit@sType 0023  
      spiInit@sClockIdle 0021                 intlevel1 0000              ??_setup_ADC 0076  
             _OPTION_REG 0081  
